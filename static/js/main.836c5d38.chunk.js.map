{"version":3,"sources":["NavBar.tsx","common/env.ts","common/common.ts","index/IndexPage.tsx","doc-page/ProjectReader.tsx","doc-page/DocPage.tsx","common/ResponsiveInputComponent.tsx","login/LoginModal.tsx","logout/LogoutPage.tsx","tool-page/ToolPage.tsx","Footer.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBarItem","className","this","props","isLargeScreen","to","link","name","React","Component","UserInfo","tryLogout","a","requestLogout","alert","authButton","loggedIn","onClick","openLoginModal","NavBar","onToggleButtonClick","newShowingState","state","showNavBarContent","setState","NavBarContent","toggleButton","items","map","value","index","key","screenWidth","title","urlFor","path","startsWith","serverUrl","width","Fetch","relativePath","method","data","init","mode","credentials","referrerPolicy","body","fetch","RepoTag","displayTitle","language","href","description","style","star","fork","IndexPage","company","github","blog","location","repos","fetching","fetchSuccess","loginName","followers","following","repoCount","bio","then","res","ok","json","Error","status","statusText","err","sort","b","alt","src","icon","faBuilding","marginRight","faLink","faMapMarkedAlt","maxWidth","repo","isForked","marked","setOptions","renderer","Renderer","highlight","code","highlightAuto","gfm","pedantic","breaks","smartLists","smartypants","DocumentFileItem","project","basePath","filename","onFileItemClick","faFileAlt","color","DocumentFolderItem","swapExpandingState","expanded","requestBasePath","folderName","faFolderOpen","faFolder","contents","f","DocumentCatalogue","e","preventDefault","hideMobileMask","nativeEvent","target","parentElement","fileType","endsWith","substr","lastIndexOf","openProjectFile","content","sanitize","catch","showMobileMask","showMask","mobileRenderFileOrFolder","base","file","console","log","projectFiles","faAngleLeft","wordBreak","currentFile","FileReader","dangerouslySetInnerHTML","__html","fileContent","split","str","line","fontSize","ProjectReader","type","updateProjectFiles","files","DocLink","linkName","displayName","ProjectList","projects","doc","url","DocPage","ProjectsQueried","basename","ResponsiveInputComponent","OnChange","setValue","placeholder","autoComplete","onChange","loginModalStyle","top","left","right","bottom","transform","padding","borderRadius","LoginModal","onSubmit","loginFunction","closeLoginModal","username","password","Modal","setAppElement","isOpen","loginModalOpen","shouldCloseOnOverlayClick","action","faWindowClose","nameChanged","pwdChanged","LogoutPage","logoutFunction","LoginInfoForm","query","JSON","stringify","schoolId","sid","vpn","pwVPN","af","pwAF","text","txt","setSchoolId","newId","setAF","newAF","setVPN","newVPN","table","paddingTop","ToolPage","Footer","sites","site","App","setResponsiveStates","docWidth","document","clientWidth","height","clientHeight","userRegister","FormData","append","userLogin","isLoggedInUser","exp","Date","setDate","getDate","cookie","save","expires","loadAll","userLogout","remove","showLoginModal","passwordChanged","navSites","footerSites","window","onresize","uname","load","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.836c5d38.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {ResponsiveComponentProps} from \"./common/common\";\r\n\r\ninterface NavBarItemProps {\r\n    name: string,\r\n    link: string\r\n}\r\n\r\ninterface ResponsiveNavBarItemProp extends ResponsiveComponentProps, NavBarItemProps {\r\n}\r\n\r\nclass NavBarItem extends React.Component<ResponsiveNavBarItemProp, any> {\r\n    render() {\r\n        return (\r\n            <li className={this.props.isLargeScreen ? \"NavItem\" : \"NarrowNavItem\"}>\r\n                <h3>\r\n                    <Link to={this.props.link}>{this.props.name}</Link>\r\n                </h3>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\ninterface UserInfoProps {\r\n    loggedIn: boolean,\r\n    openLoginModal: () => void,\r\n    requestLogout: () => Promise<boolean>\r\n}\r\n\r\nclass UserInfo extends React.Component<UserInfoProps, any> {\r\n\r\n    tryLogout = async () => {\r\n        if (await this.props.requestLogout()) {\r\n            alert('failed to logout');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let authButton;\r\n        if (this.props.loggedIn) {\r\n            authButton =\r\n                <button className='UserInfoLoginButton' onClick={this.tryLogout}>退出登录</button>;\r\n        } else {\r\n            authButton = <button className='UserInfoLoginButton'\r\n                                 onClick={this.props.openLoginModal}>登录/注册</button>;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"UserInfo\">\r\n                <li>{authButton}</li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface NavBarProps {\r\n    items: NavBarItemProps[],\r\n    title: string,\r\n    loggedIn: boolean,\r\n    openLoginModal: () => void\r\n\r\n}\r\n\r\ninterface ResponsiveNarBarProps extends ResponsiveComponentProps, NavBarProps {\r\n    requestLogout: () => Promise<boolean>\r\n}\r\n\r\ninterface NavBarState {\r\n    showNavBarContent: boolean\r\n}\r\n\r\nexport class NavBar extends React.Component<ResponsiveNarBarProps, NavBarState> {\r\n    constructor(props: ResponsiveNarBarProps) {\r\n        super(props);\r\n        this.state = {showNavBarContent: false};\r\n    }\r\n\r\n    onToggleButtonClick = () => {\r\n        let newShowingState = !this.state.showNavBarContent;\r\n        this.setState({showNavBarContent: newShowingState});\r\n    }\r\n\r\n    render() {\r\n        let toggleButton = this.props.isLargeScreen ? null :\r\n            <button className=\"ToggleButton\" onClick={this.onToggleButtonClick}/>;\r\n\r\n        let NavBarContent;\r\n        if (this.props.isLargeScreen) {\r\n            NavBarContent = (\r\n                <div className=\"NavBarContentContainer\">\r\n                    <ul className=\"NavBarSiteItemContainer\">\r\n                        {this.props.items.map((value, index) =>\r\n                            <NavBarItem name={value.name} link={value.link} key={index}\r\n                                        screenWidth={this.props.screenWidth}\r\n                                        isLargeScreen={this.props.isLargeScreen}/>)}\r\n                    </ul>\r\n                    <UserInfo loggedIn={this.props.loggedIn}\r\n                              openLoginModal={this.props.openLoginModal}\r\n                              requestLogout={this.props.requestLogout}/>\r\n                </div>\r\n            );\r\n        } else if (this.state.showNavBarContent) {\r\n            NavBarContent = (\r\n                <ul className=\"NarrowNavBarContainer\">\r\n                    {this.props.items.map((value, index) =>\r\n                        <NavBarItem name={value.name} link={value.link} key={index}\r\n                                    screenWidth={this.props.screenWidth}\r\n                                    isLargeScreen={this.props.isLargeScreen}/>)}\r\n                    <li>\r\n                        <UserInfo loggedIn={this.props.loggedIn}\r\n                                  openLoginModal={this.props.openLoginModal}\r\n                                  requestLogout={this.props.requestLogout}/>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"NavBarContainer\">\r\n                <div className=\"NavBarMain\">\r\n                    <div className=\"Title\">{this.props.title}</div>\r\n                    {this.props.isLargeScreen ? NavBarContent : toggleButton}\r\n                </div>\r\n                {this.props.isLargeScreen ? null : NavBarContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export const serverUrl =\r\n    process.env.NODE_ENV === 'production' ?\r\n        'https://www.kaixa.cn' :\r\n        'http://127.0.0.1:5000';\r\n\r\nexport const urlFor = (path: string) => {\r\n    if (path.startsWith('/')) {\r\n        return serverUrl + path;\r\n    }\r\n    return serverUrl + '/' + path;\r\n};\r\n\r\nexport const webUrl =\r\n    process.env.NODE_ENV === 'production' ?\r\n        'http://localhost:3000/' :\r\n        'https://woodykaixa.github.io/';","/**\r\n * 检测屏幕宽度是否属于大屏幕（宽度超过768px）\r\n * @param width 屏幕宽度\r\n */\r\nimport {urlFor} from \"./env\";\r\n\r\nexport function isLargeScreen(width: number) {\r\n    return width > 768;\r\n}\r\n\r\n/**\r\n * 响应式布局组件需要的属性\r\n */\r\nexport interface ResponsiveComponentProps {\r\n    screenWidth: number,\r\n    isLargeScreen: boolean\r\n}\r\n\r\n\r\ntype BodyType =\r\n    Blob\r\n    | BufferSource\r\n    | FormData\r\n    | URLSearchParams\r\n    | ReadableStream<Uint8Array>\r\n    | string;\r\n\r\nexport const Fetch = (relativePath: string, method: string, data?: BodyType | null): Promise<Response> => {\r\n    let init: RequestInit = {\r\n        method,\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n        referrerPolicy: 'no-referrer-when-downgrade',\r\n\r\n    };\r\n    if (data !== null) {\r\n        init.body = data;\r\n    }\r\n    return fetch(urlFor(relativePath), init);\r\n};","import React from 'react';\r\nimport \"./IndexPage.css\";\r\nimport {Fetch} from \"../common/common\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {faBuilding} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMapMarkedAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faLink} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {AdminProfileData, AdminProfileResponse, RepoLink} from \"../common/ServerInterface\";\r\n\r\n\r\ninterface RepoTagProps extends RepoLink, ResponsiveComponentProps {\r\n\r\n}\r\n\r\nclass RepoTag extends React.Component<RepoTagProps, any> {\r\n    render() {\r\n        let displayTitle = this.props.title;\r\n        if (this.props.language) {\r\n            displayTitle += ` (${this.props.language})`;\r\n        }\r\n        return (\r\n            <div className=\"RepoTagContainer\">\r\n                <a href={this.props.link}>\r\n                    <h3>{displayTitle}</h3>\r\n                </a>\r\n                <p>{this.props.description}</p>\r\n\r\n                <div className=\"RepoTagInfoContainer\">\r\n                    <span style={{width: 10}}/>\r\n                    <span>\r\n                        <p>stars: {this.props.star}</p>\r\n                    </span>\r\n                    <span style={{width: 20}}/>\r\n                    <span>\r\n                        <p>forks: {this.props.fork}</p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IndexPageState extends AdminProfileData {\r\n    fetching: boolean,\r\n    fetchSuccess: boolean,\r\n}\r\n\r\ninterface IndexPageProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\nexport class IndexPage extends React.Component<IndexPageProps, IndexPageState> {\r\n    constructor(props: IndexPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            company: '',\r\n            github: '',\r\n            blog: '',\r\n            location: '',\r\n            repos: [],\r\n            fetching: true,\r\n            fetchSuccess: false,\r\n            loginName: '',\r\n            followers: 0,\r\n            following: 0,\r\n            repoCount: 0,\r\n            bio: ''\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        Fetch('admin_profile', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(`${res.status}: ${res.statusText}`);\r\n        }).then((json: AdminProfileResponse) => {\r\n                if (json.err) {\r\n                    this.setState({\r\n                        fetching: false,\r\n                        fetchSuccess: false\r\n                    });\r\n                    throw new Error(json.data as string);\r\n                }\r\n                const data = json.data as AdminProfileData;\r\n                this.setState({\r\n                    fetchSuccess: true,\r\n                    fetching: false,\r\n                    name: data.name,\r\n                    company: data.company,\r\n                    github: data.github,\r\n                    location: data.location,\r\n                    blog: data.blog,\r\n                    bio: data.bio,\r\n                    following: data.following,\r\n                    followers: data.followers,\r\n                    repoCount: data.repoCount\r\n                });\r\n                data.repos.sort((a, b) => b.star - a.star);\r\n                this.setState({\r\n                    repos: data.repos\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.fetching) {\r\n            return <div className=\"FullPage\">\r\n                Loading. Please wait...\r\n            </div>;\r\n        } else if (!this.state.fetchSuccess) {\r\n            return <div className=\"ErrorMessage FullPage\">\r\n                Failed in fetching my_profile. Please try refresh or\r\n                <a href=\"mailto:690750353@qq.com\"> contact with me</a>\r\n            </div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"IndexPageInfoContainer\">\r\n                    <div className=\"IndexPageInfo\">\r\n                        <div className=\"IndexPageAvatarBox\">\r\n                            <img alt=\"avatar\"\r\n                                 src=\"https://avatars1.githubusercontent.com/u/22990333?s=460&amp;u=ab4f382b52aae8a47f29de660ed2b4551e8b1d72&amp;v=4\"/>\r\n                        </div>\r\n                        <div className=\"IndexPageInfoBox\">\r\n                            <h2 className=\"IndexPageNameBox\">{this.state.name}</h2>\r\n                            <div className=\"IndexPageCompanyBox\">\r\n                                <FontAwesomeIcon icon={faBuilding}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                {this.state.company}\r\n                            </div>\r\n                            <div className=\"IndexPageBlogBox\">\r\n                                <FontAwesomeIcon icon={faLink}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                {this.state.blog}\r\n                            </div>\r\n                            <div className=\"IndexPageLocationBox\">\r\n                                <FontAwesomeIcon icon={faMapMarkedAlt}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                {this.state.location}\r\n                            </div>\r\n                            <div className=\"IndexPageLinkBox\">\r\n                                <FontAwesomeIcon icon={faLink}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                <a href={this.state.github}>{this.state.github}</a>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"IndexPageContainer\">\r\n                    <h3 className=\"ParaTitle\">我的统计信息</h3>\r\n                    <div className=\"IndexPageProfBox\">\r\n                        <div>\r\n                            <img style={{maxWidth: '100%'}}\r\n                                 src=\"https://github-readme-stats.vercel.app/api?username=Woodykaixa&show_icons=true\"\r\n                                 alt=\"My stats\"/>\r\n                        </div>\r\n                        <div>\r\n                            <img style={{maxWidth: '100%'}}\r\n                                 src=\"https://github-readme-stats.vercel.app/api/top-langs/?username=Woodykaixa&layout=compact&hide=html&card_width=439.94\"\r\n                                 alt=\"My favorite languages\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"SplitLine\"/>\r\n                    <h3 className=\"ParaTitle\">我的代码</h3>\r\n                    <ul className=\"IndexPageRepoList\">\r\n                        {this.state.repos.map((repo, index) =>\r\n                            <li key={index}>\r\n                                <RepoTag title={repo.title} link={repo.link}\r\n                                         description={repo.description} fork={repo.fork}\r\n                                         star={repo.star} language={repo.language}\r\n                                         isLargeScreen={this.props.isLargeScreen}\r\n                                         screenWidth={this.props.screenWidth}\r\n                                         isForked={repo.isForked}/>\r\n                            </li>)}\r\n                    </ul>\r\n                    <h3 className=\"ParaTitle\">关于本站</h3>\r\n                    <div className=\"AboutSiteBlock\">\r\n                        <p>\r\n                            欢迎来到卡夏妙妙屋。\r\n                        </p>\r\n                        <p>\r\n                            这里是我的个人网站，也是我的网页制作大作业。\r\n                            <b>关于</b>页面展示了我的个人信息，也声明了本网站的信息；\r\n                            <b>文档</b>页面可以用于展示我自己参与的项目文档，注册用户根据自己的权限访问相应的文档，同时还有一个公开文档作为博客使用；\r\n                            <b>工具</b>页面是一些小工具，供部分人使用。\r\n                        </p>\r\n                        <p>\r\n                            本页面的制作使用了如下组件：React、React-Router、React-Modal、React-Cookies、FontAwesome。\r\n                            同时，网页风格参考了Material Design，并使用\r\n                            <a href=\"https://github.com/anuraghazra/github-readme-stats\">github-readme-stats</a>\r\n                            生成统计信息。\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport marked from 'marked';\r\nimport {highlightAuto} from 'highlight.js';\r\nimport {sanitize} from 'dompurify';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\nimport './ProjectReader.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFolder, faAngleLeft, faFolderOpen} from '@fortawesome/free-solid-svg-icons';\r\nimport {faFileAlt} from '@fortawesome/free-regular-svg-icons';\r\nimport {urlFor} from \"../common/env\";\r\nimport {Fetch, ResponsiveComponentProps} from \"../common/common\";\r\nimport {\r\n    ProjectFileResponse,\r\n    ProjectFolder,\r\n    ProjectHierarchyResponse\r\n} from \"../common/ServerInterface\";\r\n\r\nmarked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    highlight: (code) => highlightAuto(code).value,\r\n    gfm: true, // 允许 GitHub标准的markdown.\r\n    pedantic: false, // 不纠正原始模型任何的不良行为和错误（默认为false）\r\n    breaks: false, // 允许回车换行（该选项要求 gfm 为true）\r\n    smartLists: true, // 使用比原生markdown更时髦的列表\r\n    smartypants: false, // 使用更为时髦的标点\r\n});\r\n\r\n\r\ninterface DocumentFileItemProps {\r\n    filename: string,\r\n    project: string,\r\n    basePath: string,\r\n    onFileItemClick: (e: React.SyntheticEvent) => void\r\n}\r\n\r\nclass DocumentFileItem extends React.Component<DocumentFileItemProps, any> {\r\n    render() {\r\n        return (\r\n            <a className=\"FileItem\"\r\n               href={urlFor('/doc/project_file/') + this.props.project + this.props.basePath + '/' + this.props.filename}\r\n               onClick={this.props.onFileItemClick}\r\n               key={this.props.basePath + '/' + this.props.filename}>\r\n                <div>\r\n                    <FontAwesomeIcon icon={faFileAlt}\r\n                                     style={{marginRight: 10, color: '#adc1e4'}}/>\r\n                    {this.props.filename}\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocumentFolderItemProps {\r\n    project: string,\r\n    folderName: string,\r\n    basePath: string,\r\n    contents: Array<string | ProjectFolder>,\r\n    onFileItemClick: (e: React.SyntheticEvent) => void\r\n}\r\n\r\ninterface DocumentFolderItemState {\r\n    expanded: boolean\r\n}\r\n\r\nclass DocumentFolderItem extends React.Component<DocumentFolderItemProps, DocumentFolderItemState> {\r\n    constructor(props: DocumentFolderItemProps) {\r\n        super(props);\r\n        this.state = {expanded: false};\r\n    }\r\n\r\n    swapExpandingState = () => {\r\n        if (this.state.expanded) {\r\n            this.setState({expanded: false});\r\n        } else {\r\n            this.setState({expanded: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const requestBasePath = this.props.basePath + '/' + this.props.folderName;\r\n        return (\r\n            <li className=\"FolderItem\">\r\n                <div onClick={this.swapExpandingState}>\r\n                    <div>\r\n                        <FontAwesomeIcon icon={this.state.expanded ? faFolderOpen : faFolder}\r\n                                         color='#f9d870' style={{marginRight: 10, width: 16}}/>\r\n                        <span>{this.props.folderName}</span>\r\n                    </div>\r\n                </div>\r\n                {this.state.expanded ?\r\n                    <div className=\"CatalogueIndent\">\r\n                        <ul>\r\n                            {this.props.contents.map(f => {\r\n                                if (typeof f === 'string') {\r\n                                    return <DocumentFileItem project={this.props.project}\r\n                                                             onFileItemClick={this.props.onFileItemClick}\r\n                                                             filename={f}\r\n                                                             basePath={requestBasePath}/>;\r\n                                }\r\n                                return <DocumentFolderItem project={this.props.project}\r\n                                                           folderName={f.folderName}\r\n                                                           basePath={requestBasePath}\r\n                                                           contents={f.contents}\r\n                                                           onFileItemClick={this.props.onFileItemClick}/>;\r\n                            })}\r\n                        </ul>\r\n                    </div> :\r\n                    null}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocumentCatalogueProps\r\n    extends ResponsiveComponentProps {\r\n    project: string,\r\n    projectFiles: Array<string | ProjectFolder>,\r\n    currentFile: string,\r\n    openProjectFile: (content: string, type: string, name: string) => void\r\n}\r\n\r\ninterface DocumentCatalogueState {\r\n    showMask: boolean\r\n}\r\n\r\nclass DocumentCatalogue extends React.Component<DocumentCatalogueProps, DocumentCatalogueState> {\r\n\r\n    constructor(props: DocumentCatalogueProps) {\r\n        super(props);\r\n        this.state = {showMask: false};\r\n    }\r\n\r\n    onFileItemClick = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (!this.props.isLargeScreen) {\r\n            this.hideMobileMask();\r\n        }\r\n        const target = e.nativeEvent.target as HTMLLIElement;\r\n        const link = (target.parentElement as HTMLAnchorElement).href;\r\n        const fileType = link.endsWith('.md') ? 'markdown' : 'text';\r\n        const name = link.substr(link.lastIndexOf('/') + 1);\r\n        fetch(link, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            mode: 'cors'\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: ProjectFileResponse) => {\r\n            if (json.err) {\r\n                this.props.openProjectFile('error:\\n' + json.data, 'text', name);\r\n            } else {\r\n                const content = (fileType === 'markdown') ?\r\n                    sanitize(marked(json.data)) : json.data;\r\n                this.props.openProjectFile(content, fileType, name);\r\n            }\r\n        }).catch(() => {\r\n            this.props.openProjectFile('failed to fetch:' + link, 'text', name);\r\n        });\r\n    }\r\n\r\n    showMobileMask = () => {\r\n        this.setState({showMask: true});\r\n    }\r\n\r\n    hideMobileMask = () => {\r\n        this.setState({showMask: false});\r\n    }\r\n\r\n    mobileRenderFileOrFolder = (base: string, file: string | ProjectFolder) => {\r\n        if (typeof file === 'string') {\r\n            return <a href={urlFor('/doc/project_file/') + this.props.project + base + '/' + file}\r\n                      key={base + '/' + file} onClick={this.onFileItemClick}>\r\n                <li className=\"FileItem\">\r\n                    {base + '/' + file}\r\n                </li>\r\n            </a>;\r\n        }\r\n        return <li key={base + '/' + file.folderName} className=\"FolderItem\">\r\n            <ul>\r\n                {file.contents.map(f => {\r\n                    return this.mobileRenderFileOrFolder(base + '/' + file.folderName, f);\r\n                })}\r\n            </ul>\r\n        </li>;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.projectFiles);\r\n        if (this.props.isLargeScreen) {\r\n            return (\r\n                <nav className=\"DocumentCatalogueContainer\">\r\n                    <header className=\"DocumentCatalogueHeader\">\r\n                        <div style={{width: 'fit-content'}}>\r\n                            <Link to=\"../\" className=\"CloseProjectLink\"><FontAwesomeIcon\r\n                                icon={faAngleLeft}/></Link>\r\n                        </div>\r\n                        <div>{this.props.project}</div>\r\n                    </header>\r\n                    <div className=\"DocumentCatalogueBody\">\r\n                        <ul className=\"DocumentCatalogueTopFolder\">\r\n                            {this.props.projectFiles.map(f => {\r\n                                if (typeof f === 'string') {\r\n                                    return <DocumentFileItem filename={f}\r\n                                                             project={this.props.project}\r\n                                                             basePath=''\r\n                                                             onFileItemClick={this.onFileItemClick}/>;\r\n                                }\r\n                                return <DocumentFolderItem folderName={f.folderName}\r\n                                                           project={this.props.project} basePath=''\r\n                                                           contents={f.contents}\r\n                                                           onFileItemClick={this.onFileItemClick}/>;\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"MobileCatalogueContainer\">\r\n                <div style={{wordBreak: 'keep-all'}}>当前文件：</div>\r\n                <div className=\"MobileCatalogueChangeButton\"\r\n                     onClick={this.showMobileMask}>\r\n                    {this.props.currentFile}\r\n                </div>\r\n                {\r\n                    this.state.showMask\r\n                        ? <div className=\"MobileMask\" onClick={this.hideMobileMask}>\r\n                            <ul className=\"MobileFileList\">\r\n                                {\r\n                                    this.props.projectFiles.map(f => {\r\n                                        return this.mobileRenderFileOrFolder('', f);\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface FileReaderProps {\r\n    fileContent: string,\r\n    fileType: string,\r\n    filename: string\r\n}\r\n\r\ninterface FileReaderState {\r\n\r\n}\r\n\r\nclass FileReader extends React.Component<FileReaderProps, FileReaderState> {\r\n\r\n    render() {\r\n        const content = this.props.fileType === 'markdown' ?\r\n            <div className=\"FileContent\"\r\n                 dangerouslySetInnerHTML={{__html: sanitize(this.props.fileContent)}}/>\r\n            : <div className=\"FileContent\">\r\n                {this.props.fileContent.split('\\n').map((str, line) =>\r\n                    <div key={line} style={{fontSize: 'large'}}>{str}</div>)}\r\n            </div>;\r\n        return (\r\n            <div className=\"FileContainer\">\r\n                <ul className=\"FileHeader\">\r\n                    <li className=\"FileTab\">{this.props.filename}</li>\r\n                </ul>\r\n                <div className=\"FileBody\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ninterface ProjectReaderProps extends ResponsiveComponentProps {\r\n    project: string,\r\n    files: Array<string | ProjectFolder>,\r\n    updateProjectFiles: (files: Array<string | ProjectFolder>) => void\r\n}\r\n\r\ninterface ProjectReaderState {\r\n    fileContent: string,\r\n    fileType: string,\r\n    filename: string\r\n}\r\n\r\nexport class ProjectReader extends React.Component<ProjectReaderProps, ProjectReaderState> {\r\n\r\n    constructor(props: ProjectReaderProps) {\r\n        super(props);\r\n        Fetch('/doc/' + this.props.project, 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: ProjectHierarchyResponse) => {\r\n            if (json.err) {\r\n                throw new Error(json.data as string);\r\n            }\r\n            this.props.updateProjectFiles(json.data as Array<string | ProjectFolder>);\r\n        });\r\n        this.state = {fileContent: '欢迎使用kaixadoc', fileType: 'markdown', filename: 'welcome'};\r\n    }\r\n\r\n    openProjectFile = (content: string, type: string, name: string) => {\r\n        this.setState({fileContent: content, fileType: type, filename: name});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectReaderContainer\">\r\n                <DocumentCatalogue project={this.props.project}\r\n                                   projectFiles={this.props.files}\r\n                                   currentFile={this.state.filename}\r\n                                   openProjectFile={this.openProjectFile}\r\n                                   screenWidth={this.props.screenWidth}\r\n                                   isLargeScreen={this.props.isLargeScreen}/>\r\n                <FileReader fileContent={this.state.fileContent} fileType={this.state.fileType}\r\n                            filename={this.state.filename}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {ProjectReader} from \"./ProjectReader\";\r\nimport {Switch, Route, Link, BrowserRouter} from 'react-router-dom';\r\nimport \"./DocPage.css\";\r\nimport {Fetch, ResponsiveComponentProps} from \"../common/common\";\r\nimport {ProjectItem, DocResponse, ProjectFolder} from \"../common/ServerInterface\";\r\n\r\ninterface DocLinkProps {\r\n    displayName: string,\r\n    linkName: string\r\n}\r\n\r\nclass DocLink extends React.Component<DocLinkProps, any> {\r\n    render() {\r\n        return <li className=\"DocLink\"><Link\r\n            to={'/' + this.props.linkName}>{this.props.displayName}</Link></li>;\r\n    }\r\n}\r\n\r\n\r\ninterface ProjectListProps {\r\n    projects: ProjectItem[]\r\n}\r\n\r\nclass ProjectList extends React.Component<ProjectListProps, any> {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul className=\"ProjectList\">\r\n                    {this.props.projects.map(\r\n                        (doc, index) =>\r\n                            <DocLink displayName={doc.name}\r\n                                     linkName={doc.url}\r\n                                     key={index}/>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocProps extends ResponsiveComponentProps {\r\n    loggedIn: boolean\r\n}\r\n\r\n\r\ninterface DocState {\r\n    projects: ProjectItem[],\r\n    projectFiles: Array<string | ProjectFolder>,\r\n    ProjectsQueried: boolean\r\n}\r\n\r\nexport class DocPage extends React.Component<DocProps, DocState> {\r\n    constructor(props: DocProps) {\r\n        super(props);\r\n        this.state = {projects: [], projectFiles: [], ProjectsQueried: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        Fetch('/doc/', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: DocResponse) => {\r\n            if (json.err) {\r\n                throw new Error('Failed to fetch projects');\r\n            }\r\n            this.setState({projects: json.data, ProjectsQueried: true});\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n    updateProjectFiles = (files: Array<string | ProjectFolder>) => {\r\n        this.setState({projectFiles: files});\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.ProjectsQueried) {\r\n            return <div>\r\n                loading projects. please wait.\r\n            </div>;\r\n        }\r\n        return (\r\n            <div className=\"FullPage\">\r\n                <BrowserRouter basename='/docs'>\r\n                    <Switch>\r\n                        {this.state.projects.map((project, index) =>\r\n                            <Route key={index} path={'/' + project.url}>\r\n                                <div className=\"DocPageContainer\">\r\n                                    <ProjectReader project={project.name}\r\n                                                   files={this.state.projectFiles}\r\n                                                   updateProjectFiles={this.updateProjectFiles}\r\n                                                   screenWidth={this.props.screenWidth}\r\n                                                   isLargeScreen={this.props.isLargeScreen}/>\r\n                                </div>\r\n                            </Route>)}\r\n                        <Route path='/'>\r\n                            <ProjectList projects={this.state.projects}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n\r\n        );\r\n\r\n    }\r\n}","import React from \"react\";\r\nimport {ResponsiveComponentProps} from \"./common\";\r\n\r\ninterface InputComponentProps extends ResponsiveComponentProps {\r\n    placeholder: string,\r\n    name: string,\r\n    value: string,\r\n    setValue: (value: string) => void,\r\n    type?: string,\r\n}\r\n\r\nexport class ResponsiveInputComponent extends React.Component<InputComponentProps, any> {\r\n\r\n    OnChange = (e: React.SyntheticEvent) => {\r\n        let target = e.target as HTMLInputElement;\r\n        this.props.setValue(target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ResponsiveInputBorder\">\r\n                {\r\n                    this.props.isLargeScreen ?\r\n                        <label className=\"ResponsiveInputHint\">{this.props.placeholder}</label> :\r\n                        null\r\n                }\r\n                <input type={this.props.type ? this.props.type : \"text\"} name={this.props.name}\r\n                       value={this.props.value}\r\n                       placeholder={this.props.isLargeScreen ? \"\" : this.props.placeholder}\r\n                       autoComplete={this.props.type === \"password\" ? \"current-password\" : \"on\"}\r\n                       onChange={this.OnChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './LoginModal.css';\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {ResponsiveInputComponent} from \"../common/ResponsiveInputComponent\";\r\nimport Modal from \"react-modal\";\r\nimport {faWindowClose} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst loginModalStyle: Modal.Styles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: 0,\r\n        borderRadius: 5\r\n    }\r\n};\r\n\r\n\r\ninterface LoginProps extends ResponsiveComponentProps {\r\n    loginFunction: () => Promise<boolean>,\r\n    openLoginModal: () => void,\r\n    closeLoginModal: () => void,\r\n    loginModalOpen: boolean,\r\n    username: string,\r\n    password: string,\r\n    nameChanged: (name: string) => void,\r\n    pwdChanged: (pwd: string) => void\r\n}\r\n\r\ninterface LoginState {\r\n\r\n}\r\n\r\nexport class LoginModal extends React.Component<LoginProps, LoginState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Modal.setAppElement('.App');\r\n    }\r\n\r\n\r\n    onSubmit = async (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (await this.props.loginFunction()) {\r\n            this.props.closeLoginModal();\r\n        } else {\r\n            alert('error');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.loginModalOpen} style={loginModalStyle}\r\n                   shouldCloseOnOverlayClick={true}>\r\n                <form className=\"LoginForm\" onSubmit={this.onSubmit} action=\"https://www.kaixa.cn/login\">\r\n                    <button className=\"LoginFormCloseButton\" onClick={this.props.closeLoginModal}>\r\n                        <FontAwesomeIcon icon={faWindowClose} style={{width: 40}}/>\r\n                    </button>\r\n                    <h3>登录</h3>\r\n                    <ResponsiveInputComponent name=\"name\" placeholder=\"用户名\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.props.username}\r\n                                              setValue={this.props.nameChanged}/>\r\n                    <ResponsiveInputComponent type=\"password\" name=\"pwd\" placeholder=\"密 码\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.props.password}\r\n                                              setValue={this.props.pwdChanged}/>\r\n                    <div className=\"LoginFormButtonArea\">\r\n                        <div>\r\n                            <button type='button' className=\"SecondButton\">注册</button>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"MainButton\" type={\"submit\"}>登录\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ninterface LogoutProps {\r\n    loggedIn: boolean,\r\n    logoutFunction: () => void\r\n}\r\n\r\nexport class LogoutPage extends React.Component<LogoutProps, any> {\r\n    render() {\r\n        if (this.props.loggedIn)\r\n            this.props.logoutFunction();\r\n        return <Redirect to='/login'/>\r\n    }\r\n}","import React from 'react';\r\nimport \"./ToolPage.css\";\r\nimport {ResponsiveInputComponent} from \"../common/ResponsiveInputComponent\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {urlFor} from \"../common/env\";\r\n\r\ninterface LoginFormInfoProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\ninterface LoginInfoFormState {\r\n    sid: string,\r\n    pwAF: string,\r\n    pwVPN: string,\r\n    table: string\r\n}\r\n\r\nclass LoginInfoForm extends React.Component<LoginFormInfoProps, LoginInfoFormState> {\r\n\r\n    constructor(props: LoginFormInfoProps) {\r\n        super(props);\r\n        this.state = {sid: '', pwAF: '', pwVPN: '', table: ''};\r\n    }\r\n\r\n    query = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        fetch(urlFor('BjutSchedule'), {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                schoolId: this.state.sid,\r\n                vpn: this.state.pwVPN,\r\n                af: this.state.pwAF\r\n            }),\r\n            mode: 'cors',\r\n            credentials: 'include'\r\n        }).then(res => res.text()).then(txt => {\r\n            console.log(txt);\r\n        });\r\n    }\r\n\r\n    setSchoolId = (newId: string) => {\r\n        this.setState({sid: newId});\r\n    }\r\n\r\n    setAF = (newAF: string) => {\r\n        this.setState({pwAF: newAF});\r\n    }\r\n\r\n    setVPN = (newVPN: string) => {\r\n        this.setState({pwVPN: newVPN});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{paddingTop: '1rem'}}>\r\n                <form onSubmit={this.query}>\r\n                    <h3>课表查询</h3>\r\n                    <ResponsiveInputComponent placeholder=\"学号\" name=\"schoolId\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.sid}\r\n                                              setValue={this.setSchoolId}/>\r\n                    <ResponsiveInputComponent placeholder=\"教务密码\" name=\"pwForAF\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.pwAF} setValue={this.setAF}\r\n                                              type=\"password\"/>\r\n                    <ResponsiveInputComponent placeholder=\"网关密码\" name=\"pwForVPN\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.pwVPN} setValue={this.setVPN}\r\n                                              type=\"password\"/>\r\n                    <button>查询</button>\r\n                </form>\r\n                <div dangerouslySetInnerHTML={{__html: this.state.table}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface ToolPageProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\ninterface TollPageState {\r\n    txt: string\r\n}\r\n\r\nexport class ToolPage extends React.Component<ToolPageProps, any> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"FullPage\">\r\n                <LoginInfoForm screenWidth={this.props.screenWidth}\r\n                               isLargeScreen={this.props.isLargeScreen}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport {ResponsiveComponentProps} from \"./common/common\";\r\n\r\nexport interface FooterItemProps {\r\n    name: string\r\n}\r\n\r\ninterface FooterProps extends ResponsiveComponentProps {\r\n    sites: FooterItemProps[]\r\n}\r\n\r\nexport class Footer extends React.Component<FooterProps, any> {\r\n    render() {\r\n        return (\r\n            <div className=\"Footer\">\r\n                <div className=\"FooterInfo\">\r\n                    <ul>\r\n                        {this.props.sites.map(\r\n                            (site, index) => <li key={index}>{site.name}</li>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {NavBar} from \"./NavBar\";\r\nimport {IndexPage} from \"./index/IndexPage\";\r\nimport {DocPage} from \"./doc-page/DocPage\";\r\nimport {LoginModal} from \"./login/LoginModal\";\r\nimport {LogoutPage} from \"./logout/LogoutPage\";\r\nimport {ToolPage} from \"./tool-page/ToolPage\";\r\nimport {Footer, FooterItemProps} from \"./Footer\";\r\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\r\nimport {Fetch, isLargeScreen} from \"./common/common\";\r\nimport {\r\n    WhoAmIResponse,\r\n    LoginResponse,\r\n    RegisterResponse\r\n} from \"./common/ServerInterface\";\r\nimport cookie from 'react-cookies';\r\n\r\ninterface AppNavBarSiteItem {\r\n    name: string,\r\n    link: string\r\n}\r\n\r\ninterface AppState {\r\n    navSites: AppNavBarSiteItem[], // 导航栏显示的链接\r\n    isLoggedInUser: boolean, // 当前用户已登录\r\n    footerSites: FooterItemProps[], // 底部页脚显示的链接\r\n    width: number, // document.body.clientWidth\r\n    height: number, // document.body.clientHeight\r\n    isLargeScreen: boolean,  // width > 768px\r\n    showLoginModal: boolean, // 显示登录对话框\r\n    username: string,\r\n    password: string\r\n}\r\n\r\n\r\nexport class App extends React.Component<any, AppState> {\r\n    setResponsiveStates = () => {\r\n        const docWidth = document.body.clientWidth;\r\n        this.setState({\r\n            width: docWidth,\r\n            height: document.body.clientHeight,\r\n            isLargeScreen: isLargeScreen(docWidth)\r\n        });\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const docWidth = document.body.clientWidth;\r\n        this.state = {\r\n            navSites: [\r\n                {name: '关于', link: '/'},\r\n                {name: '文档', link: '/docs'},\r\n                {name: '工具', link: '/tools'},\r\n            ],\r\n            isLoggedInUser: false,\r\n            footerSites: [\r\n                {name: 'Copyright ©2020 Woodykaixa. All rights reserved.'}\r\n            ],\r\n            width: docWidth,\r\n            height: document.body.clientHeight,\r\n            isLargeScreen: isLargeScreen(docWidth),\r\n            showLoginModal: false,\r\n            username: '',\r\n            password: ''\r\n        };\r\n        window.onresize = this.setResponsiveStates;\r\n\r\n        const uname = cookie.load('uname');\r\n        let exp = new Date();\r\n        exp.setDate(exp.getDate() + 1);\r\n        Fetch('/auth/whoami', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: WhoAmIResponse) => {\r\n            const username = json.data.username;\r\n            if (username !== null && uname === username) {\r\n                cookie.save('uname', username, {\r\n                    path: '/',\r\n                    expires: exp\r\n                });\r\n                this.setState({isLoggedInUser: true, username});\r\n            } else {\r\n                cookie.remove('uname');\r\n            }\r\n        }).catch(err => {\r\n            console.log('failed to fetch whoami: ' + err);\r\n            cookie.remove('uname');\r\n        });\r\n    }\r\n\r\n    userRegister = async () => {\r\n        const data = new FormData();\r\n        data.append('username', this.state.username);\r\n        data.append('password', this.state.password);\r\n        await Fetch('/auth/register', 'POST', data).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: RegisterResponse) => {\r\n            if (json.err) {\r\n                throw new Error(json.data);\r\n            }\r\n            alert(json.data);\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    userLogin = async () => {\r\n        const data = new FormData();\r\n        data.append('username', this.state.username);\r\n        data.append('password', this.state.password);\r\n        await Fetch('/auth/login', 'POST', data).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: LoginResponse) => {\r\n            if (json.err) {\r\n                throw new Error(`${json.err}: ${json.data}`);\r\n            }\r\n            if (json.data === 'welcome') {\r\n                this.setState({isLoggedInUser: true});\r\n                let exp = new Date();\r\n                exp.setDate(exp.getDate() + 1);\r\n                cookie.save('uname', this.state.username, {\r\n                    path: '/',\r\n                    expires: exp\r\n                });\r\n            } else {\r\n                throw new Error('Unknown error: ' + json.data);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        console.log(cookie.loadAll(false));\r\n\r\n        return this.state.isLoggedInUser;\r\n    }\r\n\r\n    userLogout = async () => {\r\n        await Fetch('/logout', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then(() => {\r\n            this.setState({isLoggedInUser: false});\r\n            cookie.remove('uname');\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        return this.state.isLoggedInUser;\r\n    }\r\n\r\n    openLoginModal = () => {\r\n        this.setState({showLoginModal: true});\r\n    }\r\n\r\n    closeLoginModal = () => {\r\n        this.setState({showLoginModal: false});\r\n    }\r\n\r\n    passwordChanged = (value: string) => {\r\n        this.setState({password: value});\r\n    }\r\n\r\n    nameChanged = (value: string) => {\r\n        this.setState({username: value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <LoginModal loginFunction={this.userLogin} screenWidth={this.state.width}\r\n                            username={this.state.username} password={this.state.password}\r\n                            isLargeScreen={this.state.isLargeScreen}\r\n                            loginModalOpen={this.state.showLoginModal}\r\n                            openLoginModal={this.openLoginModal}\r\n                            closeLoginModal={this.closeLoginModal}\r\n                            nameChanged={this.nameChanged} pwdChanged={this.passwordChanged}/>\r\n                <BrowserRouter>\r\n                    <NavBar items={this.state.navSites} loggedIn={this.state.isLoggedInUser}\r\n                            title=\"卡夏妙妙屋\" screenWidth={this.state.width}\r\n                            isLargeScreen={this.state.isLargeScreen}\r\n                            openLoginModal={this.openLoginModal}\r\n                            requestLogout={this.userLogout}/>\r\n                    <div className=\"MainContent\">\r\n                        <Switch>\r\n                            <Route path=\"/logout\">\r\n                                <LogoutPage loggedIn={this.state.isLoggedInUser}\r\n                                            logoutFunction={this.userLogout}/>\r\n                            </Route>\r\n                            <Route path=\"/docs\">\r\n                                <DocPage loggedIn={this.state.isLoggedInUser}\r\n                                         screenWidth={this.state.width}\r\n                                         isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/tools\">\r\n                                <ToolPage screenWidth={this.state.width}\r\n                                          isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <IndexPage screenWidth={this.state.width}\r\n                                           isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer sites={this.state.footerSites} screenWidth={this.state.width}\r\n                            isLargeScreen={this.state.isLargeScreen}/>\r\n\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}