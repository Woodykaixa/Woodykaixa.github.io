{"version":3,"sources":["NavBar.tsx","common/env.ts","common/common.ts","common/LoadingComponent.tsx","index/IndexPage.tsx","doc-page/ProjectReader.tsx","doc-page/DocPage.tsx","common/ResponsiveInputComponent.tsx","login/LoginModal.tsx","logout/LogoutPage.tsx","tool-page/ToolPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["NavBarItem","className","this","props","isLargeScreen","to","link","name","React","Component","UserInfo","tryLogout","a","requestLogout","alert","authButton","loggedIn","onClick","openLoginModal","RightSideNavBar","RightSideNarBarRef","closeSelf","current","classList","add","setTimeout","container","closeRightSideNavContent","remove","createRef","ref","username","navItems","map","value","index","key","NavBar","onToggleButtonClick","newShowingState","state","showRightSideNavBarContent","setState","closeRightSideBar","NavBarContent","toggleButton","icon","faListUl","style","width","height","color","items","screenWidth","title","urlFor","path","startsWith","serverUrl","Fetch","relativePath","method","data","init","mode","credentials","referrerPolicy","body","fetch","Loading","canvas","drawCircle","context","x","y","r","opacity","fillStyle","beginPath","arc","Math","PI","fill","closePath","getContext","i","cos","sin","RepoTag","displayTitle","language","href","description","star","fork","IndexPage","company","github","blog","location","repos","fetching","fetchSuccess","loginName","followers","following","repoCount","bio","totalStars","totalForks","then","res","ok","json","Error","status","statusText","err","sort","b","stats","reduce","acc","repo","isForked","alt","src","faBuilding","marginRight","faLink","faCode","faMapMarkedAlt","maxWidth","navSites","site","desc","marginTop","textAlign","paddingRight","marked","setOptions","renderer","Renderer","highlight","code","highlightAuto","gfm","pedantic","breaks","smartLists","smartypants","DocumentFileItem","project","basePath","filename","onFileItemClick","paddingLeft","indent","faFileAlt","DocumentFolderItem","swapExpandingState","expanded","requestBasePath","folderName","faFolderOpen","faFolder","cursor","contents","f","MobileFileSelector","DropList","switchStatus","list","selectFile","e","preventDefault","fileSelected","target","files","faExpand","DocumentCatalogue","fetchFileContent","nativeEvent","console","log","parentElement","fileType","substring","length","substr","lastIndexOf","openProjectFile","content","sanitize","catch","selectFileInMobileSelector","file","iterFile","projectFiles","forEach","iterFiles","base","push","showMask","faAngleLeft","wordBreak","currentFile","FileReader","dangerouslySetInnerHTML","__html","fileContent","split","str","line","fontSize","ProjectReader","type","decodeURIComponent","updateProjectFiles","AccessibleProject","url","ProjectList","projects","doc","DocPage","ProjectsQueried","basename","ResponsiveInputComponent","OnChange","setValue","placeholder","autoComplete","onChange","loginModalStyle","top","left","right","bottom","transform","padding","borderRadius","LoginModal","onSubmit","loginFunction","closeLoginModal","onRegister","registerFunction","password","Modal","setAppElement","isOpen","loginModalOpen","shouldCloseOnOverlayClick","xmlns","version","x1","y1","x2","y2","nameChanged","pwdChanged","LogoutPage","logoutFunction","LoginInfoForm","query","JSON","stringify","schoolId","sid","vpn","pwVPN","af","pwAF","text","txt","setSchoolId","newId","setAF","newAF","setVPN","newVPN","table","paddingTop","ToolPage","App","setResponsiveStates","docWidth","document","clientWidth","clientHeight","userRegister","FormData","append","registerSuccess","userLogin","isLoggedInUser","exp","Date","setDate","getDate","cookie","save","expires","loadAll","userLogout","showLoginModal","passwordChanged","window","onresize","uname","load","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e45295e8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {ResponsiveComponentProps} from \"./common/common\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faListUl} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface NavBarItemProps {\r\n    name: string,\r\n    link: string\r\n}\r\n\r\ninterface ResponsiveNavBarItemProp extends ResponsiveComponentProps, NavBarItemProps {\r\n}\r\n\r\nclass NavBarItem extends React.Component<ResponsiveNavBarItemProp, any> {\r\n    render() {\r\n        return (\r\n            <li className={this.props.isLargeScreen ? \"NavItem\" : \"NarrowNavItem\"}>\r\n                <h3>\r\n                    <Link to={this.props.link}>{this.props.name}</Link>\r\n                </h3>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\ninterface UserInfoProps {\r\n    loggedIn: boolean,\r\n    openLoginModal: () => void,\r\n    requestLogout: () => Promise<boolean>\r\n}\r\n\r\nclass UserInfo extends React.Component<UserInfoProps, any> {\r\n\r\n    tryLogout = async () => {\r\n        if (await this.props.requestLogout()) {\r\n            alert('failed to logout');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let authButton;\r\n        if (this.props.loggedIn) {\r\n            authButton =\r\n                <button className='UserInfoLoginButton' onClick={this.tryLogout}>退出登录</button>;\r\n        } else {\r\n            authButton = <button className='UserInfoLoginButton'\r\n                                 onClick={this.props.openLoginModal}>登录/注册</button>;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"UserInfo\">\r\n                <li>{authButton}</li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\ninterface RightSideNavBarProps {\r\n    closeRightSideNavContent: () => void,\r\n    navItems: NavBarItemProps[],\r\n    loggedIn: boolean,\r\n    username: string,\r\n    openLoginModal: () => void,\r\n    requestLogout: () => Promise<boolean>\r\n}\r\n\r\nclass RightSideNavBar extends React.Component<RightSideNavBarProps, any> {\r\n\r\n    private readonly RightSideNarBarRef: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: RightSideNavBarProps) {\r\n        super(props);\r\n        this.RightSideNarBarRef = React.createRef<HTMLDivElement>();\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const container = this.RightSideNarBarRef.current as HTMLDivElement;\r\n            container.classList.remove('RightSideNavBarEnter');\r\n        }, 400);\r\n    }\r\n\r\n    closeSelf = () => {\r\n        const container = this.RightSideNarBarRef.current as HTMLDivElement;\r\n        container.classList.add('RightSideNavBarLeave');\r\n        setTimeout(() => {\r\n            const container = this.RightSideNarBarRef.current as HTMLDivElement;\r\n            this.props.closeRightSideNavContent();\r\n            container.classList.remove('RightSideNavBarLeave');\r\n        }, 400);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='RightSideBarMask' onClick={this.closeSelf}>\r\n                <div className='RightSideBarContainer RightSideNavBarEnter'\r\n                     ref={this.RightSideNarBarRef}>\r\n                    {\r\n                        this.props.loggedIn ?\r\n                            <div>\r\n                                <div className='RightSideUsername'>\r\n                                    {'你好, ' + this.props.username}\r\n                                </div>\r\n                                <div className='SplitLine'/>\r\n                            </div> :\r\n                            null\r\n                    }\r\n                    <ul className='RightSideBarItemContainer'>\r\n                        {this.props.navItems.map((value, index) =>\r\n                            <li key={index}>\r\n                                <Link to={value.link}> {value.name}</Link>\r\n                            </li>)\r\n                        }\r\n                    </ul>\r\n                    <div className='SplitLine'/>\r\n                    <div className='RightSideOperationBox'>\r\n                        {\r\n                            this.props.loggedIn ?\r\n                                <button className='RightSideLogout'\r\n                                        onClick={this.props.requestLogout}>退出登录</button> :\r\n                                <button className='RightSideLogin'\r\n                                        onClick={this.props.openLoginModal}>登录/注册</button>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface NavBarProps {\r\n    items: NavBarItemProps[],\r\n    title: string,\r\n    loggedIn: boolean,\r\n    username: string,\r\n    openLoginModal: () => void\r\n\r\n}\r\n\r\ninterface ResponsiveNarBarProps extends ResponsiveComponentProps, NavBarProps {\r\n    requestLogout: () => Promise<boolean>\r\n}\r\n\r\ninterface NavBarState {\r\n    showRightSideNavBarContent: boolean\r\n}\r\n\r\nexport class NavBar extends React.Component<ResponsiveNarBarProps, NavBarState> {\r\n    constructor(props: ResponsiveNarBarProps) {\r\n        super(props);\r\n        this.state = {showRightSideNavBarContent: false};\r\n    }\r\n\r\n    onToggleButtonClick = () => {\r\n        let newShowingState = !this.state.showRightSideNavBarContent;\r\n        this.setState({showRightSideNavBarContent: newShowingState});\r\n    }\r\n\r\n    closeRightSideBar = () => {\r\n        this.setState({showRightSideNavBarContent: false});\r\n    }\r\n\r\n    render() {\r\n        let toggleButton = this.props.isLargeScreen ? null :\r\n            <button className=\"ToggleButton\" onClick={this.onToggleButtonClick}>\r\n                <FontAwesomeIcon icon={faListUl} style={{width: 20, height: 20, color: 'white'}}/>\r\n            </button>;\r\n\r\n        let NavBarContent;\r\n        if (this.props.isLargeScreen) {\r\n            NavBarContent = (\r\n                <div className=\"NavBarContentContainer\">\r\n                    <ul className=\"NavBarSiteItemContainer\">\r\n                        {this.props.items.map((value, index) =>\r\n                            <NavBarItem name={value.name} link={value.link} key={index}\r\n                                        screenWidth={this.props.screenWidth}\r\n                                        isLargeScreen={this.props.isLargeScreen}/>)}\r\n                    </ul>\r\n                    <UserInfo loggedIn={this.props.loggedIn}\r\n                              openLoginModal={this.props.openLoginModal}\r\n                              requestLogout={this.props.requestLogout}/>\r\n                </div>\r\n            );\r\n        } else if (this.state.showRightSideNavBarContent) {\r\n            NavBarContent = (\r\n                <RightSideNavBar closeRightSideNavContent={this.closeRightSideBar}\r\n                                 navItems={this.props.items} username={this.props.username}\r\n                                 loggedIn={this.props.loggedIn}\r\n                                 requestLogout={this.props.requestLogout}\r\n                                 openLoginModal={this.props.openLoginModal}/>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"NavBarContainer\">\r\n                <div className=\"NavBarMain\">\r\n                    <div className=\"Title\">{this.props.title}</div>\r\n                    {this.props.isLargeScreen ? NavBarContent : toggleButton}\r\n                </div>\r\n                {this.props.isLargeScreen ? null : NavBarContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export const serverUrl =\r\n    process.env.NODE_ENV === 'production' ?\r\n        'https://www.kaixa.cn' :\r\n        'http://127.0.0.1:5000';\r\n\r\nexport const urlFor = (path: string) => {\r\n    if (path.startsWith('/')) {\r\n        return serverUrl + path;\r\n    }\r\n    return serverUrl + '/' + path;\r\n};\r\n\r\nexport const webUrl =\r\n    process.env.NODE_ENV === 'production' ?\r\n        'http://localhost:3000/' :\r\n        'https://woodykaixa.github.io/';","/**\r\n * 检测屏幕宽度是否属于大屏幕（宽度超过768px）\r\n * @param width 屏幕宽度\r\n */\r\nimport {urlFor} from \"./env\";\r\n\r\nexport function isLargeScreen(width: number) {\r\n    return width > 768;\r\n}\r\n\r\n/**\r\n * 响应式布局组件需要的属性\r\n */\r\nexport interface ResponsiveComponentProps {\r\n    screenWidth: number,\r\n    isLargeScreen: boolean\r\n}\r\n\r\n\r\ntype BodyType =\r\n    Blob\r\n    | BufferSource\r\n    | FormData\r\n    | URLSearchParams\r\n    | ReadableStream<Uint8Array>\r\n    | string;\r\n\r\nexport const Fetch = (relativePath: string, method: string, data?: BodyType | null): Promise<Response> => {\r\n    let init: RequestInit = {\r\n        method,\r\n        mode: 'cors',\r\n        credentials: 'include',\r\n        referrerPolicy: 'no-referrer-when-downgrade',\r\n\r\n    };\r\n    if (data !== null) {\r\n        init.body = data;\r\n    }\r\n    return fetch(urlFor(relativePath), init);\r\n};","import React from 'react';\r\nimport './LoadingComponent.css';\r\n\r\nexport class Loading extends React.Component<any, any> {\r\n\r\n    private readonly canvas: React.RefObject<HTMLCanvasElement>;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.canvas = React.createRef<HTMLCanvasElement>();\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const canvas = this.canvas.current as HTMLCanvasElement;\r\n        const context = canvas.getContext('2d') as CanvasRenderingContext2D;\r\n        const radius = 8;\r\n        const BigR = 40;\r\n        for (let i = 1; i < 10; i++) {\r\n            this.drawCircle(context,\r\n                80 + BigR * Math.cos(i * Math.PI / 5),\r\n                80 + BigR * Math.sin(i * Math.PI / 5),\r\n                radius,\r\n                0.1 * i);\r\n        }\r\n    }\r\n\r\n    drawCircle = (context: CanvasRenderingContext2D, x: number, y: number, r: number, opacity: number) => {\r\n        context.fillStyle = 'rgba(0, 0, 0, ' + opacity + ')';\r\n        context.beginPath();\r\n        context.arc(x, y, r, 0, Math.PI * 2);\r\n        context.fill();\r\n        context.closePath();\r\n    };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"LoadingContainer FullPage\">\r\n                <canvas className=\"LoadingSpin\" ref={this.canvas}\r\n                        width='160'\r\n                        height='160'/>\r\n                <div>Loading. Please Wait...</div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport \"./IndexPage.css\";\r\nimport {Fetch} from \"../common/common\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {faBuilding} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faMapMarkedAlt, faCode} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faLink} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {AdminProfileData, AdminProfileResponse, RepoLink} from \"../common/ServerInterface\";\r\nimport {Loading} from \"../common/LoadingComponent\";\r\nimport {AppNavBarSiteItem} from '../App';\r\n\r\n\r\ninterface RepoTagProps extends RepoLink, ResponsiveComponentProps {\r\n\r\n}\r\n\r\nclass RepoTag extends React.Component<RepoTagProps, any> {\r\n    render() {\r\n        let displayTitle = this.props.title;\r\n        if (this.props.language) {\r\n            displayTitle += ` (${this.props.language})`;\r\n        }\r\n        return (\r\n            <div className=\"RepoTagContainer\">\r\n                <a href={this.props.link}>\r\n                    <h3>{displayTitle}</h3>\r\n                </a>\r\n                <p>{this.props.description}</p>\r\n\r\n                <div className=\"RepoTagInfoContainer\">\r\n                    <span style={{width: 10}}/>\r\n                    <span>\r\n                        <p>stars: {this.props.star}</p>\r\n                    </span>\r\n                    <span style={{width: 20}}/>\r\n                    <span>\r\n                        <p>forks: {this.props.fork}</p>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface IndexPageState extends AdminProfileData {\r\n    fetching: boolean,\r\n    fetchSuccess: boolean,\r\n    totalStars: number,\r\n    totalForks: number\r\n}\r\n\r\ninterface IndexPageProps extends ResponsiveComponentProps {\r\n    navSites: AppNavBarSiteItem[]\r\n}\r\n\r\nexport class IndexPage extends React.Component<IndexPageProps, IndexPageState> {\r\n    constructor(props: IndexPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            company: '',\r\n            github: '',\r\n            blog: '',\r\n            location: '',\r\n            repos: [],\r\n            fetching: true,\r\n            fetchSuccess: false,\r\n            loginName: '',\r\n            followers: 0,\r\n            following: 0,\r\n            repoCount: 0,\r\n            bio: '',\r\n            totalStars: 0,\r\n            totalForks: 0\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        Fetch('admin_profile', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(`${res.status}: ${res.statusText}`);\r\n        }).then((json: AdminProfileResponse) => {\r\n                if (json.err) {\r\n                    this.setState({\r\n                        fetching: false,\r\n                        fetchSuccess: false\r\n                    });\r\n                    throw new Error(json.data as string);\r\n                }\r\n                const data = json.data as AdminProfileData;\r\n                this.setState({\r\n                    fetchSuccess: true,\r\n                    fetching: false,\r\n                    name: data.name,\r\n                    company: data.company,\r\n                    github: data.github,\r\n                    location: data.location,\r\n                    blog: data.blog,\r\n                    bio: data.bio,\r\n                    loginName: data.loginName,\r\n                    following: data.following,\r\n                    followers: data.followers,\r\n                    repoCount: data.repoCount\r\n                });\r\n                data.repos.sort((a, b) => b.star - a.star);\r\n                const stats = data.repos.reduce((acc, repo) => {\r\n                    acc.fork += repo.isForked ? 0 : repo.fork;\r\n                    acc.star += repo.isForked ? 0 : repo.star;\r\n                    return acc;\r\n                }, {\r\n                    fork: 0,\r\n                    star: 0\r\n                });\r\n                this.setState({\r\n                    repos: data.repos,\r\n                    totalForks: stats.fork,\r\n                    totalStars: stats.star\r\n                });\r\n            }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        if (this.state.fetching) {\r\n            return <Loading/>;\r\n        } else if (!this.state.fetchSuccess) {\r\n            return <div className=\"ErrorMessage FullPage\">\r\n                Failed in fetching my_profile. Please try refresh or\r\n                <a href=\"mailto:690750353@qq.com\"> contact with me</a>\r\n            </div>;\r\n        }\r\n        return (\r\n            <div>\r\n                <div className=\"IndexPageInfoContainer\">\r\n                    <div className=\"IndexPageInfo\">\r\n                        <div className=\"IndexPageAvatarBox\">\r\n                            <img alt=\"avatar\"\r\n                                 src=\"https://avatars1.githubusercontent.com/u/22990333?s=460&amp;u=ab4f382b52aae8a47f29de660ed2b4551e8b1d72&amp;v=4\"/>\r\n                        </div>\r\n                        <div className=\"IndexPageInfoBox\">\r\n                            <h2 className='IndexPageLoginNameBox'>{this.state.loginName}</h2>\r\n                            <div className=\"IndexPageCompanyBox\">\r\n                                <FontAwesomeIcon icon={faBuilding}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                {this.state.company}\r\n                            </div>\r\n                            <div className=\"IndexPageBlogBox\">\r\n                                <FontAwesomeIcon icon={faLink}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                {this.state.blog}\r\n                            </div>\r\n                            <div className=\"IndexPageLinkBox\">\r\n                                <FontAwesomeIcon icon={faCode}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                <a href={this.state.github}>{this.state.github}</a>\r\n                            </div>\r\n                            <div className=\"IndexPageLocationBox\">\r\n                                <FontAwesomeIcon icon={faMapMarkedAlt}\r\n                                                 style={{width: 16, marginRight: 5}}/>\r\n                                {this.state.location}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"IndexPageProfBox\">\r\n                        <div>\r\n                            <img style={{maxWidth: '100%'}}\r\n                                 src=\"https://github-readme-stats.vercel.app/api?username=Woodykaixa&show_icons=true&bg_color=fafafa&hide_border=true\"\r\n                                 alt=\"My stats\"/>\r\n                        </div>\r\n                        <div>\r\n                            <img style={{maxWidth: '100%'}}\r\n                                 src=\"https://github-readme-stats.vercel.app/api/top-langs/?username=Woodykaixa&layout=compact&hide=html&card_width=439.94&bg_color=fafafa&hide_border=true\"\r\n                                 alt=\"My favorite languages\"/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"IndexPageContainer\">\r\n                    <h3 className=\"ParaTitle\">关于本站</h3>\r\n                    <div className=\"AboutSiteBlock\">\r\n                        <p>\r\n                            欢迎来到卡夏妙妙屋。\r\n                        </p>\r\n                        <p>\r\n                            这里是我的个人网站，也是我的网页制作大作业。\r\n                        </p>\r\n                        {\r\n                            this.props.navSites.map(site => {\r\n                                return <p key={site.name}>\r\n                                    <b>{site.name}</b>页面\r\n                                    {site.desc}\r\n                                </p>;\r\n                            })\r\n                        }\r\n                        <p>\r\n                            本页面的制作使用了如下组件：React、React-Router、React-Modal、React-Cookies、FontAwesome。\r\n                            同时，网页风格参考了Material Design，并使用\r\n                            <a href=\"https://github.com/anuraghazra/github-readme-stats\">github-readme-stats</a>\r\n                            生成统计信息。\r\n                        </p>\r\n                    </div>\r\n                    <div className=\"SplitLine\"/>\r\n                    <h3 className=\"ParaTitle\">我的项目</h3>\r\n                    <ul className=\"IndexPageRepoList\">\r\n                        {this.state.repos.map((repo, index) =>\r\n                            <li key={index}>\r\n                                <RepoTag title={repo.title} link={repo.link}\r\n                                         description={repo.description} fork={repo.fork}\r\n                                         star={repo.star} language={repo.language}\r\n                                         isLargeScreen={this.props.isLargeScreen}\r\n                                         screenWidth={this.props.screenWidth}\r\n                                         isForked={repo.isForked}/>\r\n                            </li>)}\r\n                    </ul>\r\n                    <p style={{marginTop: 20, textAlign: 'right', paddingRight: 10}}>\r\n                        <small>\r\n                            Copyright © 2020-2021 Woodykaixa. All rights reserved.\r\n                        </small>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport marked from 'marked';\r\nimport {highlightAuto} from 'highlight.js';\r\nimport {sanitize} from 'dompurify';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\nimport './ProjectReader.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFolder, faAngleLeft, faFolderOpen, faExpand} from '@fortawesome/free-solid-svg-icons';\r\nimport {faFileAlt} from '@fortawesome/free-regular-svg-icons';\r\nimport {urlFor} from \"../common/env\";\r\nimport {Fetch, ResponsiveComponentProps} from \"../common/common\";\r\nimport {\r\n    ProjectFileResponse,\r\n    ProjectFolder,\r\n    ProjectHierarchyResponse\r\n} from \"../common/ServerInterface\";\r\n\r\nmarked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    highlight: (code) => highlightAuto(code).value,\r\n    gfm: true, // 允许 GitHub标准的markdown.\r\n    pedantic: false, // 不纠正原始模型任何的不良行为和错误（默认为false）\r\n    breaks: false, // 允许回车换行（该选项要求 gfm 为true）\r\n    smartLists: true, // 使用比原生markdown更时髦的列表\r\n    smartypants: false, // 使用更为时髦的标点\r\n});\r\n\r\n\r\ninterface DocumentFileItemProps {\r\n    filename: string,\r\n    project: string,\r\n    basePath: string,\r\n    onFileItemClick: (e: React.SyntheticEvent) => void,\r\n    indent: number\r\n}\r\n\r\nclass DocumentFileItem extends React.Component<DocumentFileItemProps, any> {\r\n    render() {\r\n        return (\r\n            <li className=\"FileItem\">\r\n                <a\r\n                    href={urlFor('/doc/') + this.props.project + this.props.basePath + '/' + this.props.filename}\r\n                    onClick={this.props.onFileItemClick}\r\n                    key={this.props.basePath + '/' + this.props.filename}>\r\n                    <div style={{paddingLeft: this.props.indent * 20 + 10}}>\r\n                        <FontAwesomeIcon icon={faFileAlt}\r\n                                         style={{\r\n                                             marginRight: 10,\r\n                                             color: '#adc1e4',\r\n                                             width: 20,\r\n                                             height: 20\r\n                                         }}/>\r\n                        {this.props.filename}\r\n                    </div>\r\n                </a>\r\n            </li>\r\n\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocumentFolderItemProps {\r\n    project: string,\r\n    folderName: string,\r\n    basePath: string,\r\n    contents: Array<string | ProjectFolder>,\r\n    onFileItemClick: (e: React.SyntheticEvent) => void,\r\n    indent: number\r\n}\r\n\r\ninterface DocumentFolderItemState {\r\n    expanded: boolean\r\n}\r\n\r\nclass DocumentFolderItem extends React.Component<DocumentFolderItemProps, DocumentFolderItemState> {\r\n    constructor(props: DocumentFolderItemProps) {\r\n        super(props);\r\n        this.state = {expanded: false};\r\n    }\r\n\r\n    swapExpandingState = () => {\r\n        if (this.state.expanded) {\r\n            this.setState({expanded: false});\r\n        } else {\r\n            this.setState({expanded: true});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const requestBasePath = this.props.basePath + '/' + this.props.folderName;\r\n        return (\r\n            <li className=\"FolderItem\" style={{paddingLeft: this.props.indent * 20}}>\r\n                <div>\r\n                    <FontAwesomeIcon icon={this.state.expanded ? faFolderOpen : faFolder}\r\n                                     color='#f9d870'\r\n                                     style={{\r\n                                         marginRight: 10,\r\n                                         width: 20,\r\n                                         height: 20,\r\n                                         cursor: 'pointer'\r\n                                     }}\r\n                                     onClick={this.swapExpandingState}/>\r\n                    <span>{this.props.folderName}</span>\r\n                </div>\r\n                {this.state.expanded ?\r\n                    <ul>\r\n                        {this.props.contents.map(f => {\r\n                            if (typeof f === 'string') {\r\n                                return <DocumentFileItem project={this.props.project}\r\n                                                         onFileItemClick={this.props.onFileItemClick}\r\n                                                         filename={f}\r\n                                                         basePath={requestBasePath}\r\n                                                         indent={this.props.indent + 1}/>;\r\n                            }\r\n                            return <DocumentFolderItem project={this.props.project}\r\n                                                       folderName={f.folderName}\r\n                                                       basePath={requestBasePath}\r\n                                                       contents={f.contents}\r\n                                                       onFileItemClick={this.props.onFileItemClick}\r\n                                                       indent={this.props.indent + 1}/>;\r\n                        })}\r\n                    </ul> :\r\n                    null}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\ninterface MobileFileSelectorProps {\r\n    files: string[],\r\n    current: string,\r\n    project: string,\r\n    fileSelected: (file: string) => void\r\n}\r\n\r\ninterface MobileFileSelectorState {\r\n    expanded: boolean\r\n}\r\n\r\nclass MobileFileSelector extends React.Component<MobileFileSelectorProps, MobileFileSelectorState> {\r\n\r\n    private DropList: React.RefObject<HTMLDivElement>;\r\n\r\n    constructor(props: MobileFileSelectorProps) {\r\n        super(props);\r\n        this.state = {expanded: false};\r\n        this.DropList = React.createRef();\r\n    }\r\n\r\n    switchStatus = () => {\r\n        if (this.state.expanded) {\r\n            const list = this.DropList.current as HTMLDivElement;\r\n            list.classList.remove('SelectorExpand');\r\n            list.classList.add('SelectorHide');\r\n            setTimeout(() => {\r\n                this.setState({expanded: false});\r\n            }, 300);\r\n        } else {\r\n            this.setState({expanded: true});\r\n\r\n        }\r\n    }\r\n\r\n    selectFile = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        this.switchStatus();\r\n        this.props.fileSelected((e.target as HTMLAnchorElement).href);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='SelectorMain'>\r\n                <div className='SelectedItem'>\r\n                    {this.props.current}\r\n                    {\r\n                        this.state.expanded ?\r\n                            <div className='SelectorDropList SelectorExpand ' ref={this.DropList}>\r\n                                {this.props.files.map((f, i) =>\r\n                                    <a onClick={this.selectFile} key={i}\r\n                                       href={urlFor('/doc/') + this.props.project + f}>{f}</a>)}\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </div>\r\n                <button className='SelectionButton' onClick={this.switchStatus}>\r\n                    <FontAwesomeIcon icon={faExpand}/>\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocumentCatalogueProps\r\n    extends ResponsiveComponentProps {\r\n    project: string,\r\n    description: string,\r\n    projectFiles: Array<string | ProjectFolder>,\r\n    currentFile: string,\r\n    openProjectFile: (content: string, type: string, name: string) => void\r\n}\r\n\r\ninterface DocumentCatalogueState {\r\n    showMask: boolean\r\n}\r\n\r\nclass DocumentCatalogue extends React.Component<DocumentCatalogueProps, DocumentCatalogueState> {\r\n\r\n    constructor(props: DocumentCatalogueProps) {\r\n        super(props);\r\n        this.state = {showMask: false};\r\n    }\r\n\r\n    fetchFileContent = (link: string): Promise<ProjectFileResponse> => {\r\n        return fetch(link, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            mode: 'cors'\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        });\r\n    }\r\n\r\n    onFileItemClick = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        const target = e.nativeEvent.target as HTMLLIElement;\r\n        console.log(\"onFileItemClick:\", target);\r\n        const link = (target.parentElement as HTMLAnchorElement).href;\r\n        const fileType = link.substring(link.length - 3) === '.md' ? 'markdown' : 'text';\r\n        const name = link.substr(link.lastIndexOf('/') + 1);\r\n        this.fetchFileContent(link).then((json: ProjectFileResponse) => {\r\n            if (json.err) {\r\n                this.props.openProjectFile('error:\\n' + json.data, 'text', name);\r\n            } else {\r\n                const content = (fileType === 'markdown') ?\r\n                    sanitize(marked(json.data)) : json.data;\r\n                this.props.openProjectFile(content, fileType, name);\r\n            }\r\n        }).catch(() => {\r\n            this.props.openProjectFile('failed to fetch:' + link, 'text', name);\r\n        });\r\n    }\r\n\r\n    selectFileInMobileSelector = (file: string) => {\r\n        const fileType = file.substring(file.length - 3) === '.md' ? 'markdown' : 'text';\r\n        const name = file.substring(file.lastIndexOf('/'));\r\n        this.fetchFileContent(file).then((json: ProjectFileResponse) => {\r\n            if (json.err) {\r\n                this.props.openProjectFile('error:\\n' + json.data, 'text', name);\r\n            } else {\r\n                const content = (fileType === 'markdown') ?\r\n                    sanitize(marked(json.data)) : json.data;\r\n                this.props.openProjectFile(content, fileType, name);\r\n            }\r\n        }).catch(() => {\r\n            this.props.openProjectFile('failed to fetch:' + file, 'text', name);\r\n        });\r\n    }\r\n\r\n    iterFile = (): string[] => {\r\n        const files: string[] = [];\r\n        const iterFiles = (base: string, file: string | ProjectFolder) => {\r\n            if (typeof file === 'string') {\r\n                files.push(base + '/' + file);\r\n            } else {\r\n                file.contents.forEach(content => {\r\n                    iterFiles(base + '/' + file.folderName, content);\r\n                });\r\n            }\r\n        };\r\n        this.props.projectFiles.forEach(f => {\r\n            iterFiles('', f);\r\n        });\r\n        return files;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.projectFiles);\r\n        if (this.props.isLargeScreen) {\r\n            return (\r\n                <nav className=\"DocumentCatalogueContainer\">\r\n                    <header className=\"DocumentCatalogueHeader\">\r\n                        <div>{this.props.project}</div>\r\n                        <div className=\"DocumentCatalogueDesc\">{this.props.description}</div>\r\n                    </header>\r\n                    <div className=\"DocumentCatalogueBody\">\r\n                        <ul className=\"DocumentCatalogueTopFolder\">\r\n                            <li className=\"FileItem\">\r\n                                <div>\r\n                                    <Link to=\"../\" className=\"CloseProjectLink\">\r\n                                        <FontAwesomeIcon icon={faAngleLeft}\r\n                                                         style={{width: 20, height: 20}}/>\r\n                                    </Link>\r\n                                    返回\r\n                                </div>\r\n                            </li>\r\n                            {this.props.projectFiles.map(f => {\r\n                                if (typeof f === 'string') {\r\n                                    return <DocumentFileItem filename={f}\r\n                                                             project={this.props.project}\r\n                                                             basePath=''\r\n                                                             onFileItemClick={this.onFileItemClick}\r\n                                                             indent={0}/>;\r\n                                }\r\n                                return <DocumentFolderItem folderName={f.folderName}\r\n                                                           project={this.props.project} basePath=''\r\n                                                           contents={f.contents}\r\n                                                           onFileItemClick={this.onFileItemClick}\r\n                                                           indent={0}/>;\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"MobileCatalogueContainer\">\r\n                <div style={{wordBreak: 'keep-all'}}>当前文件：</div>\r\n                <MobileFileSelector files={this.iterFile()} current={this.props.currentFile}\r\n                                    project={this.props.project}\r\n                                    fileSelected={this.selectFileInMobileSelector}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface FileReaderProps {\r\n    fileContent: string,\r\n    fileType: string,\r\n    filename: string\r\n}\r\n\r\ninterface FileReaderState {\r\n\r\n}\r\n\r\nclass FileReader extends React.Component<FileReaderProps, FileReaderState> {\r\n\r\n    render() {\r\n        const content = this.props.fileType === 'markdown' ?\r\n            <div className=\"FileContent\"\r\n                 dangerouslySetInnerHTML={{__html: sanitize(this.props.fileContent)}}/>\r\n            : <div className=\"FileContent\">\r\n                {this.props.fileContent.split('\\n').map((str, line) =>\r\n                    <div key={line} style={{fontSize: 'large'}}>{str}</div>)}\r\n            </div>;\r\n        return (\r\n            <div className=\"FileContainer\">\r\n                <ul className=\"FileHeader\">\r\n                    <li className=\"FileTab\">{this.props.filename}</li>\r\n                </ul>\r\n                <div className=\"FileBody\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ninterface ProjectReaderProps extends ResponsiveComponentProps {\r\n    project: string,\r\n    description: string,\r\n    files: Array<string | ProjectFolder>,\r\n    updateProjectFiles: (files: Array<string | ProjectFolder>) => void\r\n}\r\n\r\ninterface ProjectReaderState {\r\n    fileContent: string,\r\n    fileType: string,\r\n    filename: string\r\n}\r\n\r\nexport class ProjectReader extends React.Component<ProjectReaderProps, ProjectReaderState> {\r\n\r\n    constructor(props: ProjectReaderProps) {\r\n        super(props);\r\n        Fetch('/doc/' + this.props.project, 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: ProjectHierarchyResponse) => {\r\n            if (json.err) {\r\n                throw new Error(json.data as string);\r\n            }\r\n            this.props.updateProjectFiles(json.data as Array<string | ProjectFolder>);\r\n        }).catch(err => {\r\n            console.log(err);\r\n            this.setState({\r\n                fileContent: `${err}: when opening project ${this.props.project}`,\r\n                filename: 'Error'\r\n            });\r\n        });\r\n        this.state = {fileContent: '欢迎使用kaixadoc', fileType: 'markdown', filename: 'welcome'};\r\n    }\r\n\r\n    openProjectFile = (content: string, type: string, name: string) => {\r\n        this.setState({fileContent: content, fileType: type, filename: decodeURIComponent(name)});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectReaderContainer\">\r\n                <DocumentCatalogue project={this.props.project}\r\n                                   description={this.props.description}\r\n                                   projectFiles={this.props.files}\r\n                                   currentFile={this.state.filename}\r\n                                   openProjectFile={this.openProjectFile}\r\n                                   screenWidth={this.props.screenWidth}\r\n                                   isLargeScreen={this.props.isLargeScreen}/>\r\n                <FileReader fileContent={this.state.fileContent} fileType={this.state.fileType}\r\n                            filename={this.state.filename}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport {ProjectReader} from \"./ProjectReader\";\r\nimport {Switch, Route, Link, BrowserRouter} from 'react-router-dom';\r\nimport \"./DocPage.css\";\r\nimport {Fetch, ResponsiveComponentProps} from \"../common/common\";\r\nimport {ProjectItem, DocResponse, ProjectFolder} from \"../common/ServerInterface\";\r\n\r\ninterface AccessibleProjectProps extends ProjectItem {\r\n}\r\n\r\nclass AccessibleProject extends React.Component<AccessibleProjectProps, any> {\r\n    render() {\r\n        return (\r\n            <div className='AccessibleProjectItem'>\r\n                <li className='ProjectItemName'>\r\n                    <Link to={'/' + this.props.url}>\r\n                        {this.props.name}\r\n                    </Link>\r\n                    <p>\r\n                        {this.props.description}\r\n                    </p>\r\n                </li>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface ProjectListProps {\r\n    projects: ProjectItem[]\r\n}\r\n\r\nclass ProjectList extends React.Component<ProjectListProps, any> {\r\n    render() {\r\n        return (\r\n            <div className='ProjectListContainer'>\r\n                <ul className=\"ProjectList\">\r\n                    {this.props.projects.map(\r\n                        (doc, index) =>\r\n                            <AccessibleProject name={doc.name} url={doc.url}\r\n                                               description={doc.description}\r\n                                               key={index}/>\r\n                    )}\r\n                </ul>\r\n                <p style={{textAlign: 'right'}}>\r\n                    <small> 如想获取更多文档的访问权限，请联系管理员。</small>\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocProps extends ResponsiveComponentProps {\r\n    loggedIn: boolean\r\n}\r\n\r\n\r\ninterface DocState {\r\n    projects: ProjectItem[],\r\n    projectFiles: Array<string | ProjectFolder>,\r\n    ProjectsQueried: boolean\r\n}\r\n\r\nexport class DocPage extends React.Component<DocProps, DocState> {\r\n    constructor(props: DocProps) {\r\n        super(props);\r\n        this.state = {projects: [], projectFiles: [], ProjectsQueried: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        Fetch('/doc/', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: DocResponse) => {\r\n            if (json.err) {\r\n                throw new Error('Failed to fetch projects');\r\n            }\r\n            this.setState({projects: json.data, ProjectsQueried: true});\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n\r\n    }\r\n\r\n    updateProjectFiles = (files: Array<string | ProjectFolder>) => {\r\n        this.setState({projectFiles: files});\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.ProjectsQueried) {\r\n            return <div>\r\n                loading projects. please wait.\r\n            </div>;\r\n        }\r\n        return (\r\n            <div className=\"FullPage\">\r\n                <BrowserRouter basename='/docs'>\r\n                    <Switch>\r\n                        {this.state.projects.map((project, index) =>\r\n                            <Route key={index} path={'/' + project.url}>\r\n                                <div className=\"DocPageContainer\">\r\n                                    <ProjectReader project={project.name}\r\n                                                   files={this.state.projectFiles}\r\n                                                   updateProjectFiles={this.updateProjectFiles}\r\n                                                   screenWidth={this.props.screenWidth}\r\n                                                   isLargeScreen={this.props.isLargeScreen}\r\n                                                   description={project.description}/>\r\n                                </div>\r\n                            </Route>)}\r\n                        <Route path='/'>\r\n                            <ProjectList projects={this.state.projects}/>\r\n                        </Route>\r\n                    </Switch>\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport {ResponsiveComponentProps} from \"./common\";\r\n\r\ninterface InputComponentProps extends ResponsiveComponentProps {\r\n    placeholder: string,\r\n    name: string,\r\n    value: string,\r\n    setValue: (value: string) => void,\r\n    type?: string,\r\n}\r\n\r\nexport class ResponsiveInputComponent extends React.Component<InputComponentProps, any> {\r\n\r\n    OnChange = (e: React.SyntheticEvent) => {\r\n        let target = e.target as HTMLInputElement;\r\n        this.props.setValue(target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ResponsiveInputBorder\">\r\n                {\r\n                    this.props.isLargeScreen ?\r\n                        <label className=\"ResponsiveInputHint\">{this.props.placeholder}</label> :\r\n                        null\r\n                }\r\n                <input type={this.props.type ? this.props.type : \"text\"} name={this.props.name}\r\n                       value={this.props.value}\r\n                       placeholder={this.props.isLargeScreen ? \"\" : this.props.placeholder}\r\n                       autoComplete={this.props.type === \"password\" ? \"current-password\" : \"on\"}\r\n                       onChange={this.OnChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './LoginModal.css';\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {ResponsiveInputComponent} from \"../common/ResponsiveInputComponent\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst loginModalStyle: Modal.Styles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        padding: 0,\r\n        borderRadius: 5\r\n    }\r\n};\r\n\r\n\r\ninterface LoginProps extends ResponsiveComponentProps {\r\n    loginFunction: () => Promise<boolean>,\r\n    registerFunction: () => Promise<boolean>,\r\n    openLoginModal: () => void,\r\n    closeLoginModal: () => void,\r\n    loginModalOpen: boolean,\r\n    username: string,\r\n    password: string,\r\n    nameChanged: (name: string) => void,\r\n    pwdChanged: (pwd: string) => void\r\n}\r\n\r\ninterface LoginState {\r\n\r\n}\r\n\r\nexport class LoginModal extends React.Component<LoginProps, LoginState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Modal.setAppElement('.App');\r\n    }\r\n\r\n\r\n    onSubmit = async (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (await this.props.loginFunction()) {\r\n            this.props.closeLoginModal();\r\n        } else {\r\n            alert('error');\r\n        }\r\n    }\r\n\r\n    onRegister = async (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        const registerSuccess = await this.props.registerFunction();\r\n        if (registerSuccess) {\r\n            await this.props.loginFunction();\r\n            this.props.closeLoginModal();\r\n        } else {\r\n            console.log('register failed');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Modal isOpen={this.props.loginModalOpen} style={loginModalStyle}\r\n                   shouldCloseOnOverlayClick={true}>\r\n                <form className=\"LoginForm\" onSubmit={this.onSubmit}>\r\n                    <button className=\"LoginFormCloseButton\" onClick={this.props.closeLoginModal}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" width={20}\r\n                             height={20}>\r\n                            <line x1=\"3\" y1=\"3\" x2=\"17\" y2=\"17\"/>\r\n                            <line x1=\"17\" y1=\"3\" x2=\"3\" y2=\"17\"/>\r\n                        </svg>\r\n                    </button>\r\n                    <h3 className='LoginFormTitle'>登录</h3>\r\n                    <ResponsiveInputComponent name=\"name\" placeholder=\"用户名\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.props.username}\r\n                                              setValue={this.props.nameChanged}/>\r\n                    <ResponsiveInputComponent type=\"password\" name=\"pwd\" placeholder=\"密 码\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.props.password}\r\n                                              setValue={this.props.pwdChanged}/>\r\n                    <div className=\"LoginFormButtonArea\">\r\n                        <div>\r\n                            <button type='submit' className=\"SecondButton\"\r\n                                    onClick={this.onRegister}>注册\r\n                            </button>\r\n                        </div>\r\n                        <div>\r\n                            <button className=\"MainButton\" type=\"submit\">登录\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </Modal>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ninterface LogoutProps {\r\n    loggedIn: boolean,\r\n    logoutFunction: () => void\r\n}\r\n\r\nexport class LogoutPage extends React.Component<LogoutProps, any> {\r\n    render() {\r\n        if (this.props.loggedIn)\r\n            this.props.logoutFunction();\r\n        return <Redirect to='/login'/>\r\n    }\r\n}","import React from 'react';\r\nimport \"./ToolPage.css\";\r\nimport {ResponsiveInputComponent} from \"../common/ResponsiveInputComponent\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {urlFor} from \"../common/env\";\r\n\r\ninterface LoginFormInfoProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\ninterface LoginInfoFormState {\r\n    sid: string,\r\n    pwAF: string,\r\n    pwVPN: string,\r\n    table: string\r\n}\r\n\r\nclass LoginInfoForm extends React.Component<LoginFormInfoProps, LoginInfoFormState> {\r\n\r\n    constructor(props: LoginFormInfoProps) {\r\n        super(props);\r\n        this.state = {sid: '', pwAF: '', pwVPN: '', table: ''};\r\n    }\r\n\r\n    query = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        fetch(urlFor('BjutSchedule'), {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                schoolId: this.state.sid,\r\n                vpn: this.state.pwVPN,\r\n                af: this.state.pwAF\r\n            }),\r\n            mode: 'cors',\r\n            credentials: 'include'\r\n        }).then(res => res.text()).then(txt => {\r\n            console.log(txt);\r\n        });\r\n    }\r\n\r\n    setSchoolId = (newId: string) => {\r\n        this.setState({sid: newId});\r\n    }\r\n\r\n    setAF = (newAF: string) => {\r\n        this.setState({pwAF: newAF});\r\n    }\r\n\r\n    setVPN = (newVPN: string) => {\r\n        this.setState({pwVPN: newVPN});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{paddingTop: '1rem'}}>\r\n                <form onSubmit={this.query}>\r\n                    <h3>课表查询</h3>\r\n                    <ResponsiveInputComponent placeholder=\"学号\" name=\"schoolId\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.sid}\r\n                                              setValue={this.setSchoolId}/>\r\n                    <ResponsiveInputComponent placeholder=\"教务密码\" name=\"pwForAF\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.pwAF} setValue={this.setAF}\r\n                                              type=\"password\"/>\r\n                    <ResponsiveInputComponent placeholder=\"网关密码\" name=\"pwForVPN\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.pwVPN} setValue={this.setVPN}\r\n                                              type=\"password\"/>\r\n                    <button>查询</button>\r\n                </form>\r\n                <div dangerouslySetInnerHTML={{__html: this.state.table}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface ToolPageProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\ninterface TollPageState {\r\n    txt: string\r\n}\r\n\r\nexport class ToolPage extends React.Component<ToolPageProps, any> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"FullPage\">\r\n                <LoginInfoForm screenWidth={this.props.screenWidth}\r\n                               isLargeScreen={this.props.isLargeScreen}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {NavBar} from \"./NavBar\";\r\nimport {IndexPage} from \"./index/IndexPage\";\r\nimport {DocPage} from \"./doc-page/DocPage\";\r\nimport {LoginModal} from \"./login/LoginModal\";\r\nimport {LogoutPage} from \"./logout/LogoutPage\";\r\nimport {ToolPage} from \"./tool-page/ToolPage\";\r\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\r\nimport {Fetch, isLargeScreen} from \"./common/common\";\r\nimport {\r\n    WhoAmIResponse,\r\n    LoginResponse,\r\n    RegisterResponse\r\n} from \"./common/ServerInterface\";\r\nimport cookie from 'react-cookies';\r\n\r\nexport interface AppNavBarSiteItem {\r\n    name: string,\r\n    link: string,\r\n    desc: string\r\n}\r\n\r\ninterface AppState {\r\n    navSites: AppNavBarSiteItem[], // 导航栏显示的链接\r\n    isLoggedInUser: boolean, // 当前用户已登录\r\n    width: number, // document.body.clientWidth\r\n    height: number, // document.body.clientHeight\r\n    isLargeScreen: boolean,  // width > 768px\r\n    showLoginModal: boolean, // 显示登录对话框\r\n    username: string,\r\n    password: string\r\n}\r\n\r\n\r\nexport class App extends React.Component<any, AppState> {\r\n    setResponsiveStates = () => {\r\n        const docWidth = document.body.clientWidth;\r\n        this.setState({\r\n            width: docWidth,\r\n            height: document.body.clientHeight,\r\n            isLargeScreen: isLargeScreen(docWidth)\r\n        });\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const docWidth = document.body.clientWidth;\r\n        this.state = {\r\n            navSites: [{\r\n                name: '关于',\r\n                link: '/',\r\n                desc: '展示个人信息以及网站信息'\r\n            }, {\r\n                name: '文章',\r\n                link: '/docs',\r\n                desc: '用于展示我自己参与的项目文档，注册用户根据自己的权限访问相应的文档，同时还有一个公开文档作为博客使用'\r\n            },\r\n                // {\r\n                //     name: '工具', link: '/tools', desc: '有一些小工具，供部分人使用'\r\n                // }\r\n            ],\r\n            isLoggedInUser: false,\r\n            width: docWidth,\r\n            height: document.body.clientHeight,\r\n            isLargeScreen: isLargeScreen(docWidth),\r\n            showLoginModal: false,\r\n            username: '',\r\n            password: ''\r\n        };\r\n        window.onresize = this.setResponsiveStates;\r\n\r\n        const uname = cookie.load('uname');\r\n        let exp = new Date();\r\n        exp.setDate(exp.getDate() + 1);\r\n        Fetch('/auth/whoami', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: WhoAmIResponse) => {\r\n            const username = json.data.username;\r\n            if (username !== null && uname === username) {\r\n                cookie.save('uname', username, {\r\n                    path: '/',\r\n                    expires: exp\r\n                });\r\n                this.setState({isLoggedInUser: true, username});\r\n            } else {\r\n                cookie.remove('uname');\r\n            }\r\n        }).catch(err => {\r\n            console.log('failed to fetch whoami: ' + err);\r\n            cookie.remove('uname');\r\n        });\r\n    }\r\n\r\n    userRegister = async () => {\r\n        const data = new FormData();\r\n        data.append('username', this.state.username);\r\n        data.append('password', this.state.password);\r\n        let registerSuccess = false;\r\n        await Fetch('/auth/register', 'POST', data).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: RegisterResponse) => {\r\n            if (json.err) {\r\n                throw new Error(json.data);\r\n            }\r\n            registerSuccess = true;\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        return registerSuccess;\r\n    }\r\n\r\n    userLogin = async () => {\r\n        const data = new FormData();\r\n        data.append('username', this.state.username);\r\n        data.append('password', this.state.password);\r\n        await Fetch('/auth/login', 'POST', data).then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then((json: LoginResponse) => {\r\n            if (json.err) {\r\n                throw new Error(`${json.err}: ${json.data}`);\r\n            }\r\n            if (json.data === 'welcome') {\r\n                this.setState({isLoggedInUser: true});\r\n                let exp = new Date();\r\n                exp.setDate(exp.getDate() + 1);\r\n                cookie.save('uname', this.state.username, {\r\n                    path: '/',\r\n                    expires: exp\r\n                });\r\n            } else {\r\n                throw new Error('Unknown error: ' + json.data);\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        console.log(cookie.loadAll(false));\r\n\r\n        return this.state.isLoggedInUser;\r\n    }\r\n\r\n    userLogout = async () => {\r\n        await Fetch('/auth/logout', 'GET').then(res => {\r\n            if (res.ok) {\r\n                return res.json();\r\n            }\r\n            throw new Error(res.statusText);\r\n        }).then(() => {\r\n            this.setState({isLoggedInUser: false});\r\n            cookie.remove('uname');\r\n        }).catch(err => {\r\n            console.log(err);\r\n        });\r\n        return this.state.isLoggedInUser;\r\n    }\r\n\r\n    openLoginModal = () => {\r\n        this.setState({showLoginModal: true});\r\n    }\r\n\r\n    closeLoginModal = () => {\r\n        this.setState({showLoginModal: false});\r\n    }\r\n\r\n    passwordChanged = (value: string) => {\r\n        this.setState({password: value});\r\n    }\r\n\r\n    nameChanged = (value: string) => {\r\n        this.setState({username: value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <LoginModal loginFunction={this.userLogin} registerFunction={this.userRegister}\r\n                            screenWidth={this.state.width}\r\n                            username={this.state.username} password={this.state.password}\r\n                            isLargeScreen={this.state.isLargeScreen}\r\n                            loginModalOpen={this.state.showLoginModal}\r\n                            openLoginModal={this.openLoginModal}\r\n                            closeLoginModal={this.closeLoginModal}\r\n                            nameChanged={this.nameChanged} pwdChanged={this.passwordChanged}/>\r\n                <BrowserRouter>\r\n                    <NavBar items={this.state.navSites} loggedIn={this.state.isLoggedInUser}\r\n                            username={this.state.username} title=\"卡夏妙妙屋\"\r\n                            screenWidth={this.state.width}\r\n                            isLargeScreen={this.state.isLargeScreen}\r\n                            openLoginModal={this.openLoginModal}\r\n                            requestLogout={this.userLogout}/>\r\n                    <div className=\"MainContent\">\r\n                        <Switch>\r\n                            <Route path=\"/logout\">\r\n                                <LogoutPage loggedIn={this.state.isLoggedInUser}\r\n                                            logoutFunction={this.userLogout}/>\r\n                            </Route>\r\n                            <Route path=\"/docs\">\r\n                                <DocPage loggedIn={this.state.isLoggedInUser}\r\n                                         screenWidth={this.state.width}\r\n                                         isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/tools\">\r\n                                <ToolPage screenWidth={this.state.width}\r\n                                          isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <IndexPage screenWidth={this.state.width}\r\n                                           isLargeScreen={this.state.isLargeScreen}\r\n                                           navSites={this.state.navSites}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n\r\n\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}