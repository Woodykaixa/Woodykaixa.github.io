{"version":3,"sources":["NavBar.tsx","common/env.ts","index/IndexPage.tsx","doc-page/ProjectReader.tsx","doc-page/DocPage.tsx","common/ResponsiveInputComponent.tsx","login/LoginPage.tsx","logout/LogoutPage.tsx","register/RegisterPage.tsx","tool-page/ToolPage.tsx","Footer.tsx","common/common.ts","App.tsx","serviceWorker.ts","index.tsx","logo.svg"],"names":["NavBarItem","className","this","props","isLargeScreen","to","link","name","React","Component","UserInfo","toLogin","onPageChanged","toRegister","authButton","loggedIn","showingLogin","onClick","NavBar","handleShowingPageChanged","showLogin","setState","showingLoginPage","onToggleButtonClick","newShowingState","state","showNavBarContent","NavBarContent","toggleButton","items","map","value","index","key","screenWidth","title","urlFor","path","IndexPage","avatar","company","github","repos","fetching","fetchSuccess","fetch","then","res","json","success","avatar_url","html_url","src","alt","href","repo","marked","setOptions","renderer","Renderer","highlight","code","highlightAuto","gfm","pedantic","breaks","smartLists","smartypants","DocumentCatalogue","onFileItemClick","e","preventDefault","hideMobileMask","nativeEvent","target","parentElement","fileType","endsWith","substr","lastIndexOf","method","credentials","mode","content","sanitize","openProjectFile","err","catch","renderFileOrFolder","base","file","project","icon","faFileAlt","style","marginRight","color","folderName","faFolder","contents","f","showMobileMask","showMask","mobileRenderFileOrFolder","console","log","projectFiles","width","faAngleLeft","wordBreak","currentFile","FileReader","dangerouslySetInnerHTML","__html","fileContent","split","str","line","fontSize","filename","ProjectReader","type","updateProjectFiles","files","DocLink","linkName","displayName","ProjectList","projects","doc","url","DocPage","ProjectsQueried","basename","ResponsiveInputComponent","OnChange","setValue","placeholder","autoComplete","onChange","LoginPage","onSubmit","loginFunction","fakeCallback","redirectTo","window","location","logo","LogoutPage","logoutFunction","RegisterPage","LoginInfoForm","query","body","JSON","stringify","schoolId","sid","vpn","pwVPN","af","pwAF","text","txt","setSchoolId","newId","setAF","newAF","setVPN","newVPN","table","paddingTop","ToolPage","Footer","sites","site","App","setResponsiveStates","docWidth","document","clientWidth","height","clientHeight","userLogin","isLoggedInUser","userLogout","navSites","footerSites","onresize","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.5d19a31e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport {Link} from 'react-router-dom';\r\nimport {ResponsiveComponentProps} from \"./common/common\";\r\n\r\ninterface NavBarItemProps {\r\n    name: string,\r\n    link: string\r\n}\r\n\r\ninterface ResponsiveNavBarItemProp extends ResponsiveComponentProps, NavBarItemProps {\r\n}\r\n\r\nclass NavBarItem extends React.Component<ResponsiveNavBarItemProp, any> {\r\n    render() {\r\n        return (\r\n            <li className={this.props.isLargeScreen ? \"NavItem\" : \"NarrowNavItem\"}>\r\n                <h3>\r\n                    <Link to={this.props.link}>{this.props.name}</Link>\r\n                </h3>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\ninterface UserInfoProps {\r\n    loggedIn: boolean,\r\n    showingLogin: boolean,\r\n    onPageChanged: (showLogin: boolean) => void\r\n}\r\n\r\nclass UserInfo extends React.Component<UserInfoProps, any> {\r\n\r\n    toLogin = () => {\r\n        this.props.onPageChanged(true);\r\n    }\r\n\r\n    toRegister = () => {\r\n        this.props.onPageChanged(false);\r\n    }\r\n\r\n    render() {\r\n        let authButton;\r\n        if (this.props.loggedIn) {\r\n            authButton = <Link to='/logout'> 退出登录 </Link>;\r\n        } else if (this.props.showingLogin) {\r\n            authButton = <Link to=\"/register\" onClick={this.toRegister}>去注册</Link>;\r\n        } else {\r\n            authButton = <Link to=\"/login\" onClick={this.toLogin}>去登录</Link>;\r\n        }\r\n\r\n        return (\r\n            <ul className=\"UserInfo\">\r\n                <li>{authButton}</li>\r\n            </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport interface NavBarProps {\r\n    items: NavBarItemProps[],\r\n    title: string,\r\n    loggedIn: boolean\r\n\r\n}\r\n\r\ninterface ResponsiveNarBarProps extends ResponsiveComponentProps, NavBarProps {\r\n}\r\n\r\ninterface NavBarState {\r\n    showingLoginPage: boolean,\r\n    showNavBarContent: boolean\r\n}\r\n\r\nexport class NavBar extends React.Component<ResponsiveNarBarProps, NavBarState> {\r\n    constructor(props: ResponsiveNarBarProps) {\r\n        super(props);\r\n        this.state = {showingLoginPage: true, showNavBarContent: false};\r\n    }\r\n\r\n    handleShowingPageChanged = (showLogin: boolean) => {\r\n        this.setState({showingLoginPage: showLogin});\r\n    }\r\n\r\n    onToggleButtonClick = () => {\r\n        let newShowingState = !this.state.showNavBarContent;\r\n        this.setState({showNavBarContent: newShowingState});\r\n    }\r\n\r\n    render() {\r\n        let toggleButton = this.props.isLargeScreen ? null :\r\n            <button className=\"ToggleButton\" onClick={this.onToggleButtonClick}/>;\r\n\r\n        let NavBarContent;\r\n        if (this.props.isLargeScreen) {\r\n            NavBarContent = (\r\n                <div className=\"NavBarContentContainer\">\r\n                    <ul className=\"NavBarSiteItemContainer\">\r\n                        {this.props.items.map((value, index) =>\r\n                            <NavBarItem name={value.name} link={value.link} key={index}\r\n                                        screenWidth={this.props.screenWidth}\r\n                                        isLargeScreen={this.props.isLargeScreen}/>)}\r\n                    </ul>\r\n                    <UserInfo loggedIn={this.props.loggedIn}\r\n                              showingLogin={this.state.showingLoginPage}\r\n                              onPageChanged={this.handleShowingPageChanged}/>\r\n                </div>\r\n            );\r\n        } else if (this.state.showNavBarContent) {\r\n            NavBarContent = (\r\n                <ul className=\"NarrowNavBarContainer\">\r\n                    {this.props.items.map((value, index) =>\r\n                        <NavBarItem name={value.name} link={value.link} key={index}\r\n                                    screenWidth={this.props.screenWidth}\r\n                                    isLargeScreen={this.props.isLargeScreen}/>)}\r\n                    <li>\r\n                        <UserInfo loggedIn={this.props.loggedIn}\r\n                                  showingLogin={this.state.showingLoginPage}\r\n                                  onPageChanged={this.handleShowingPageChanged}/>\r\n                    </li>\r\n                </ul>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div className=\"NavBarContainer\">\r\n                <div className=\"NavBarMain\">\r\n                    <span className=\"Title\">{this.props.title}</span>\r\n                    {this.props.isLargeScreen ? NavBarContent : toggleButton}\r\n                </div>\r\n                {this.props.isLargeScreen ? null : NavBarContent}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}","export const serverUrl =\r\n    process.env.NODE_ENV === 'production' ?\r\n        'https://www.kaixa.cn/' :\r\n        'http://127.0.0.1:5000/';\r\n\r\nexport const urlFor = (path: string) => {\r\n    return serverUrl + path;\r\n};\r\n\r\nexport const webUrl =\r\n    process.env.NODE_ENV === 'production' ?\r\n        'http://localhost:3000/' :\r\n        'https://woodykaixa.github.io/';","import React from 'react';\r\nimport \"./IndexPage.css\";\r\nimport {urlFor} from \"../common/env\";\r\n\r\ninterface RepoLink {\r\n    title: string,\r\n    link: string,\r\n    description: string\r\n}\r\n\r\ninterface IndexPageState {\r\n    fetching: boolean,\r\n    fetchSuccess: boolean,\r\n    avatar: string,\r\n    name: string,\r\n    company: string,\r\n    github: string,\r\n    repos: RepoLink[]\r\n}\r\n\r\nexport class IndexPage extends React.Component<any, IndexPageState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            avatar: '',\r\n            company: '',\r\n            github: '',\r\n            repos: [],\r\n            fetching: true,\r\n            fetchSuccess: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(urlFor('my_profile')).then(res => res.json()).then(json => {\r\n            if (json.success) {\r\n                this.setState({\r\n                    fetchSuccess: true,\r\n                    fetching: false,\r\n                    avatar: json.avatar_url,\r\n                    name: json.name,\r\n                    company: json.company,\r\n                    github: json.html_url,\r\n                    repos: json.repos\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    fetching: false,\r\n                    fetchSuccess: false\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.fetching) {\r\n            return <div>\r\n                Loading. Please wait\r\n            </div>;\r\n        } else if (!this.state.fetchSuccess) {\r\n            return <div>\r\n                Fetch failed.\r\n            </div>;\r\n        }\r\n        return (\r\n            <div className=\"IndexPageContainer FullPage\">\r\n                <div className=\"IndexPageInfoContainer\">\r\n                    <div className=\"IndexPageAvatarBox\">\r\n                        <img src={this.state.avatar} alt={this.state.name}/>\r\n                    </div>\r\n                    <div className=\"IndexPageInfoBox\">\r\n                        <h2 className=\"IndexPageNameBox\">{this.state.name}</h2>\r\n                        <div className=\"IndexPageCompanyBox\">{this.state.company}</div>\r\n                        <div className=\"IndexPageLinkBox\">\r\n                            <a href={this.state.github}>{this.state.github}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ul className=\"IndexPageRepoList\">\r\n                    <h3>代码仓库</h3>\r\n                    {this.state.repos.map((repo, index) =>\r\n                        <li key={index}><a href={repo.link}>{repo.title}</a></li>)}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport marked from 'marked';\r\nimport {highlightAuto} from 'highlight.js';\r\nimport {sanitize} from 'dompurify';\r\nimport 'highlight.js/styles/atom-one-light.css';\r\nimport './ProjectReader.css';\r\nimport {Link} from \"react-router-dom\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faFolder, faAngleLeft} from '@fortawesome/free-solid-svg-icons';\r\nimport {faFileAlt} from '@fortawesome/free-regular-svg-icons';\r\nimport {urlFor} from \"../common/env\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\n\r\nmarked.setOptions({\r\n    renderer: new marked.Renderer(),\r\n    highlight: (code) => highlightAuto(code).value,\r\n    gfm: true, // 允许 GitHub标准的markdown.\r\n    pedantic: false, // 不纠正原始模型任何的不良行为和错误（默认为false）\r\n    breaks: false, // 允许回车换行（该选项要求 gfm 为true）\r\n    smartLists: true, // 使用比原生markdown更时髦的列表\r\n    smartypants: false, // 使用更为时髦的标点\r\n});\r\n\r\nexport interface ProjectFolder {\r\n    folderName: string\r\n    contents: Array<string | ProjectFolder>\r\n}\r\n\r\ninterface DocumentCatalogueProps extends ResponsiveComponentProps {\r\n    project: string,\r\n    projectFiles: Array<string | ProjectFolder>,\r\n    currentFile: string,\r\n    openProjectFile: (content: string, type: string, name: string) => void\r\n}\r\n\r\ninterface DocumentCatalogueState {\r\n    showMask: boolean\r\n}\r\n\r\nclass DocumentCatalogue extends React.Component<DocumentCatalogueProps, DocumentCatalogueState> {\r\n\r\n    constructor(props: DocumentCatalogueProps) {\r\n        super(props);\r\n        this.state = {showMask: false};\r\n    }\r\n\r\n    onFileItemClick = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        if (!this.props.isLargeScreen) {\r\n            this.hideMobileMask();\r\n        }\r\n        const target = e.nativeEvent.target as HTMLLIElement;\r\n        const link = (target.parentElement as HTMLAnchorElement).href;\r\n        const fileType = link.endsWith('.md') ? 'markdown' : 'text';\r\n        const name = link.substr(link.lastIndexOf('/') + 1);\r\n        fetch(link, {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            mode: 'cors'\r\n        }).then(res => res.json()).then(json => {\r\n            if (json.success) {\r\n                const content = (fileType === 'markdown') ?\r\n                    sanitize(marked(json.content)) : json.content;\r\n                this.props.openProjectFile(content, fileType, name);\r\n            } else {\r\n                this.props.openProjectFile('error:\\n' + json.err, 'text', name);\r\n            }\r\n        }).catch(() => {\r\n            this.props.openProjectFile('failed to fetch:' + link, 'text', name);\r\n        });\r\n    }\r\n\r\n    renderFileOrFolder = (base: string, file: string | ProjectFolder) => {\r\n        if (typeof file === 'string') {\r\n            return <a href={urlFor('project_file/') + this.props.project + base + '/' + file}\r\n                      onClick={this.onFileItemClick} key={base + '/' + file}>\r\n                <li className='FileItem'>\r\n                    <FontAwesomeIcon icon={faFileAlt} style={{marginRight: 10, color: '#adc1e4'}}/>\r\n                    {file}\r\n                </li>\r\n            </a>;\r\n        }\r\n        return <li className='FolderItem' key={file.folderName}>\r\n            <div>\r\n                <FontAwesomeIcon icon={faFolder} color='#f9d870' style={{marginRight: 10}}/>\r\n                <span>{file.folderName}</span>\r\n            </div>\r\n            <ul>\r\n                {file.contents.map((f) => {\r\n                    return this.renderFileOrFolder(base + '/' + file.folderName, f);\r\n                })}\r\n            </ul>\r\n        </li>;\r\n    }\r\n\r\n    showMobileMask = () => {\r\n        this.setState({showMask: true});\r\n    }\r\n\r\n    hideMobileMask = () => {\r\n        this.setState({showMask: false});\r\n    }\r\n\r\n    mobileRenderFileOrFolder = (base: string, file: string | ProjectFolder) => {\r\n        if (typeof file === 'string') {\r\n            return <a href={urlFor('project_file/') + this.props.project + base + '/' + file}\r\n                      key={base + '/' + file} onClick={this.onFileItemClick}>\r\n                <li className=\"FileItem\">\r\n                    {base + '/' + file}\r\n                </li>\r\n            </a>;\r\n        }\r\n        return <li key={base + '/' + file.folderName} className=\"FolderItem\">\r\n            <ul>\r\n                {file.contents.map(f => {\r\n                    return this.mobileRenderFileOrFolder(base + '/' + file.folderName, f);\r\n                })}\r\n            </ul>\r\n        </li>;\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props.projectFiles);\r\n        if (this.props.isLargeScreen) {\r\n            return (\r\n                <nav className=\"DocumentCatalogueContainer\">\r\n                    <header className=\"DocumentCatalogueHeader\">\r\n                        <div style={{width: 'fit-content'}}>\r\n                            <Link to=\"../\" className=\"CloseProjectLink\"><FontAwesomeIcon\r\n                                icon={faAngleLeft}/></Link>\r\n                        </div>\r\n                        <div>{this.props.project}</div>\r\n                    </header>\r\n                    <div className=\"DocumentCatalogueBody\">\r\n                        <ul className=\"DocumentCatalogueTopFolder\">\r\n                            {this.props.projectFiles.map(f => {\r\n                                return this.renderFileOrFolder('', f);\r\n                            })}\r\n                        </ul>\r\n                    </div>\r\n                </nav>\r\n            );\r\n        }\r\n        return (\r\n            <div className=\"MobileCatalogueContainer\">\r\n                <div style={{wordBreak: 'keep-all'}}>当前文件：</div>\r\n                <div className=\"MobileCatalogueChangeButton\"\r\n                     onClick={this.showMobileMask}>\r\n                    {this.props.currentFile}\r\n                </div>\r\n                {\r\n                    this.state.showMask\r\n                        ? <div className=\"MobileMask\" onClick={this.hideMobileMask}>\r\n                            <ul className=\"MobileFileList\">\r\n                                {\r\n                                    this.props.projectFiles.map(f => {\r\n                                        return this.mobileRenderFileOrFolder('', f);\r\n                                    })\r\n                                }\r\n                            </ul>\r\n                        </div>\r\n                        : null\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface FileReaderProps {\r\n    fileContent: string,\r\n    fileType: string,\r\n    filename: string\r\n}\r\n\r\ninterface FileReaderState {\r\n\r\n}\r\n\r\nclass FileReader extends React.Component<FileReaderProps, FileReaderState> {\r\n\r\n    render() {\r\n        const content = this.props.fileType === 'markdown' ?\r\n            <div className=\"FileContent\"\r\n                 dangerouslySetInnerHTML={{__html: sanitize(this.props.fileContent)}}/>\r\n            : <div className=\"FileContent\">\r\n                {this.props.fileContent.split('\\n').map((str, line) =>\r\n                    <div key={line} style={{fontSize: 'large'}}>{str}</div>)}\r\n            </div>;\r\n        return (\r\n            <div className=\"FileContainer\">\r\n                <ul className=\"FileHeader\">\r\n                    <li className=\"FileTab\">{this.props.filename}</li>\r\n                </ul>\r\n                <div className=\"FileBody\">\r\n                    {content}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\ninterface ProjectReaderProps extends ResponsiveComponentProps {\r\n    project: string,\r\n    files: Array<string | ProjectFolder>,\r\n    updateProjectFiles: (files: Array<string | ProjectFolder>) => void\r\n}\r\n\r\ninterface ProjectReaderState {\r\n    fileContent: string,\r\n    fileType: string,\r\n    filename: string\r\n}\r\n\r\nexport class ProjectReader extends React.Component<ProjectReaderProps, ProjectReaderState> {\r\n\r\n    constructor(props: ProjectReaderProps) {\r\n        super(props);\r\n        fetch(urlFor('projectDoc/') + this.props.project, {\r\n            mode: 'cors',\r\n            credentials: 'include'\r\n        }).then(res => res.json()).then(json => {\r\n            this.props.updateProjectFiles(json as Array<string | ProjectFolder>);\r\n        });\r\n        this.state = {fileContent: '欢迎使用kaixadoc', fileType: 'markdown', filename: 'welcome'};\r\n    }\r\n\r\n    openProjectFile = (content: string, type: string, name: string) => {\r\n        this.setState({fileContent: content, fileType: type, filename: name});\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ProjectReaderContainer\">\r\n                <DocumentCatalogue project={this.props.project}\r\n                                   projectFiles={this.props.files}\r\n                                   currentFile={this.state.filename}\r\n                                   openProjectFile={this.openProjectFile}\r\n                                   screenWidth={this.props.screenWidth}\r\n                                   isLargeScreen={this.props.isLargeScreen}/>\r\n                <FileReader fileContent={this.state.fileContent} fileType={this.state.fileType}\r\n                            filename={this.state.filename}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {ProjectReader, ProjectFolder} from \"./ProjectReader\";\r\nimport {Switch, Redirect, Route, Link, BrowserRouter} from 'react-router-dom';\r\nimport \"./DocPage.css\";\r\nimport {urlFor} from \"../common/env\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\n\r\ninterface DocLinkProps {\r\n    displayName: string,\r\n    linkName: string\r\n}\r\n\r\nclass DocLink extends React.Component<DocLinkProps, any> {\r\n    render() {\r\n        return <li className=\"DocLink\"><Link\r\n            to={'/' + this.props.linkName}>{this.props.displayName}</Link></li>;\r\n    }\r\n}\r\n\r\ninterface Project {\r\n    url: string,\r\n    name: string\r\n}\r\n\r\n\r\ninterface ProjectListProps {\r\n    projects: Project[]\r\n}\r\n\r\nclass ProjectList extends React.Component<ProjectListProps, any> {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul className=\"ProjectList\">\r\n                    {this.props.projects.map(\r\n                        (doc, index) =>\r\n                            <DocLink displayName={doc.name}\r\n                                     linkName={doc.url}\r\n                                     key={index}/>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface DocProps extends ResponsiveComponentProps {\r\n    loggedIn: boolean\r\n}\r\n\r\n\r\ninterface DocState {\r\n    projects: Project[],\r\n    projectFiles: Array<string | ProjectFolder>,\r\n    ProjectsQueried: boolean\r\n}\r\n\r\nexport class DocPage extends React.Component<DocProps, DocState> {\r\n    constructor(props: DocProps) {\r\n        super(props);\r\n        this.state = {projects: [], projectFiles: [], ProjectsQueried: false};\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(urlFor('projectDoc'), {\r\n            mode: 'cors',\r\n            credentials: 'include'\r\n        }).then(res => res.json()).then(json => {\r\n            this.setState({projects: json as Project[], ProjectsQueried: true});\r\n        });\r\n\r\n    }\r\n\r\n    updateProjectFiles = (files: Array<string | ProjectFolder>) => {\r\n        this.setState({projectFiles: files});\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loggedIn) {\r\n            if (!this.state.ProjectsQueried) {\r\n                return <div>\r\n                    loading projects. please wait.\r\n                </div>;\r\n            }\r\n            return (\r\n                <div className=\"FullPage\">\r\n                    <BrowserRouter basename='/docs'>\r\n                        <Switch>\r\n                            {this.state.projects.map((project, index) =>\r\n                                <Route key={index} path={'/' + project.url}>\r\n                                    <div className=\"DocPageContainer\">\r\n                                        <ProjectReader project={project.name}\r\n                                                       files={this.state.projectFiles}\r\n                                                       updateProjectFiles={this.updateProjectFiles}\r\n                                                       screenWidth={this.props.screenWidth}\r\n                                                       isLargeScreen={this.props.isLargeScreen}/>\r\n                                    </div>\r\n                                </Route>)}\r\n                            <Route path='/'>\r\n                                <ProjectList projects={this.state.projects}/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </BrowserRouter>\r\n                </div>\r\n\r\n            );\r\n        }\r\n\r\n        return <Redirect to='/login?from_link=/docs'/>;\r\n    }\r\n}","import React from \"react\";\r\nimport {ResponsiveComponentProps} from \"./common\";\r\n\r\ninterface InputComponentProps extends ResponsiveComponentProps {\r\n    placeholder: string,\r\n    name: string,\r\n    value: string,\r\n    setValue: (value: string) => void,\r\n    type?: string,\r\n}\r\n\r\nexport class ResponsiveInputComponent extends React.Component<InputComponentProps, any> {\r\n\r\n    OnChange = (e: React.SyntheticEvent) => {\r\n        let target = e.target as HTMLInputElement;\r\n        this.props.setValue(target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"ResponsiveInputBorder\">\r\n                {\r\n                    this.props.isLargeScreen ?\r\n                        <label className=\"ResponsiveInputHint\">{this.props.placeholder}</label> :\r\n                        null\r\n                }\r\n                <input type={this.props.type ? this.props.type : \"text\"} name={this.props.name}\r\n                       value={this.props.value}\r\n                       placeholder={this.props.isLargeScreen ? \"\" : this.props.placeholder}\r\n                       autoComplete={this.props.type === \"password\" ? \"current-password\" : \"on\"}\r\n                       onChange={this.OnChange}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './LoginPage.css';\r\nimport logo from '../logo.svg';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {ResponsiveInputComponent} from \"../common/ResponsiveInputComponent\";\r\n\r\ninterface LoginProps extends ResponsiveComponentProps {\r\n    loggedIn: boolean,\r\n    loginFunction: () => void\r\n}\r\n\r\ninterface LoginState {\r\n    redirectTo: string\r\n}\r\n\r\nexport class LoginPage extends React.Component<LoginProps, LoginState> {\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {redirectTo: window.location.href.substr(window.location.href.lastIndexOf('=') + 1)};\r\n    }\r\n\r\n    onSubmit = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        this.props.loginFunction();\r\n    }\r\n\r\n    fakeCallback = (value: string) => {\r\n        console.log(value);\r\n    }\r\n\r\n    render() {\r\n        if (this.props.loggedIn)\r\n            return <Redirect to={this.state.redirectTo}/>;\r\n        return (\r\n            <div className=\"LoginFormContainer FullPage\">\r\n                {\r\n                    this.props.isLargeScreen ?\r\n                        <aside className=\"ImgArea\">\r\n                            <img src={logo} alt=\"tmp logo\"/>\r\n                        </aside>\r\n                        : null\r\n                }\r\n                <form className=\"LoginForm\" onSubmit={this.onSubmit}>\r\n                    <h3>登录</h3>\r\n                    <ResponsiveInputComponent name=\"name\" placeholder=\"用户名\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen} value=\"\"\r\n                                              setValue={this.fakeCallback}/>\r\n                    <ResponsiveInputComponent type=\"password\" name=\"pwd\" placeholder=\"密 码\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen} value=\"\"\r\n                                              setValue={this.fakeCallback}/>\r\n                    <button>登录</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\ninterface LogoutProps {\r\n    loggedIn: boolean,\r\n    logoutFunction: () => void\r\n}\r\n\r\nexport class LogoutPage extends React.Component<LogoutProps, any> {\r\n    render() {\r\n        if (this.props.loggedIn)\r\n            this.props.logoutFunction();\r\n        return <Redirect to='/login'/>\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class RegisterPage extends React.Component<any, any> {\r\n    render() {\r\n        return <div>register</div>\r\n    }\r\n}","import React from 'react';\r\nimport \"./ToolPage.css\";\r\nimport {ResponsiveInputComponent} from \"../common/ResponsiveInputComponent\";\r\nimport {ResponsiveComponentProps} from \"../common/common\";\r\nimport {urlFor} from \"../common/env\";\r\n\r\ninterface LoginFormInfoProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\ninterface LoginInfoFormState {\r\n    sid: string,\r\n    pwAF: string,\r\n    pwVPN: string,\r\n    table: string\r\n}\r\n\r\nclass LoginInfoForm extends React.Component<LoginFormInfoProps, LoginInfoFormState> {\r\n\r\n    constructor(props: LoginFormInfoProps) {\r\n        super(props);\r\n        this.state = {sid: '', pwAF: '', pwVPN: '', table: ''};\r\n    }\r\n\r\n    query = (e: React.SyntheticEvent) => {\r\n        e.preventDefault();\r\n        fetch(urlFor('BjutSchedule'), {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                schoolId: this.state.sid,\r\n                vpn: this.state.pwVPN,\r\n                af: this.state.pwAF\r\n            }),\r\n            mode: 'cors',\r\n            credentials: 'include'\r\n        }).then(res => res.text()).then(txt => {\r\n            console.log(txt);\r\n        });\r\n    }\r\n\r\n    setSchoolId = (newId: string) => {\r\n        this.setState({sid: newId});\r\n    }\r\n\r\n    setAF = (newAF: string) => {\r\n        this.setState({pwAF: newAF});\r\n    }\r\n\r\n    setVPN = (newVPN: string) => {\r\n        this.setState({pwVPN: newVPN});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{paddingTop: '1rem'}}>\r\n                <form onSubmit={this.query}>\r\n                    <h3>课表查询</h3>\r\n                    <ResponsiveInputComponent placeholder=\"学号\" name=\"schoolId\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.sid}\r\n                                              setValue={this.setSchoolId}/>\r\n                    <ResponsiveInputComponent placeholder=\"教务密码\" name=\"pwForAF\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.pwAF} setValue={this.setAF}\r\n                                              type=\"password\"/>\r\n                    <ResponsiveInputComponent placeholder=\"网关密码\" name=\"pwForVPN\"\r\n                                              screenWidth={this.props.screenWidth}\r\n                                              isLargeScreen={this.props.isLargeScreen}\r\n                                              value={this.state.pwVPN} setValue={this.setVPN}\r\n                                              type=\"password\"/>\r\n                    <button>查询</button>\r\n                </form>\r\n                <div dangerouslySetInnerHTML={{__html: this.state.table}}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ninterface ToolPageProps extends ResponsiveComponentProps {\r\n\r\n}\r\n\r\ninterface TollPageState {\r\n    txt: string\r\n}\r\n\r\nexport class ToolPage extends React.Component<ToolPageProps, any> {\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"FullPage\">\r\n                <LoginInfoForm screenWidth={this.props.screenWidth}\r\n                               isLargeScreen={this.props.isLargeScreen}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport \"./Footer.css\";\r\nimport {ResponsiveComponentProps} from \"./common/common\";\r\n\r\nexport interface FooterItemProps {\r\n    name: string\r\n}\r\n\r\ninterface FooterProps extends ResponsiveComponentProps {\r\n    sites: FooterItemProps[]\r\n}\r\n\r\nexport class Footer extends React.Component<FooterProps, any> {\r\n    render() {\r\n        let className = \"Footer\";\r\n        return (\r\n            <div className={className}>\r\n                <ul>\r\n                    {this.props.sites.map(\r\n                        (site, index) => <li key={index}>{site.name}</li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}","/**\r\n * 检测屏幕宽度是否属于大屏幕（宽度超过768px）\r\n * @param width 屏幕宽度\r\n */\r\nexport function isLargeScreen(width: number) {\r\n    return width > 768;\r\n}\r\n\r\n/**\r\n * 响应式布局组件需要的属性\r\n */\r\nexport interface ResponsiveComponentProps {\r\n    screenWidth: number,\r\n    isLargeScreen: boolean\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport {NavBar} from \"./NavBar\";\r\nimport {IndexPage} from \"./index/IndexPage\";\r\nimport {DocPage} from \"./doc-page/DocPage\";\r\nimport {LoginPage} from \"./login/LoginPage\";\r\nimport {LogoutPage} from \"./logout/LogoutPage\";\r\nimport {RegisterPage} from \"./register/RegisterPage\";\r\nimport {ToolPage} from \"./tool-page/ToolPage\";\r\nimport {Footer, FooterItemProps} from \"./Footer\";\r\nimport {Route, BrowserRouter, Switch} from \"react-router-dom\";\r\nimport {isLargeScreen} from \"./common/common\";\r\n\r\ninterface AppNavBarSiteItem {\r\n    name: string,\r\n    link: string\r\n}\r\n\r\ninterface AppState {\r\n    navSites: AppNavBarSiteItem[], // 导航栏显示的链接\r\n    isLoggedInUser: boolean, // 当前用户已登录\r\n    footerSites: FooterItemProps[], // 底部页脚显示的链接\r\n    width: number, // document.body.clientWidth\r\n    height: number, // document.body.clientHeight\r\n    isLargeScreen: boolean // width > 768px\r\n}\r\n\r\nexport class App extends React.Component<any, AppState> {\r\n    setResponsiveStates = () => {\r\n        const docWidth = document.body.clientWidth;\r\n        this.setState({\r\n            width: docWidth,\r\n            height: document.body.clientHeight,\r\n            isLargeScreen: isLargeScreen(docWidth)\r\n        });\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        const docWidth = document.body.clientWidth;\r\n        this.state = {\r\n            navSites: [\r\n                {name: '关于', link: '/'},\r\n                {name: '文档', link: '/docs'},\r\n                {name: '工具', link: '/tools'},\r\n            ],\r\n            isLoggedInUser: false,\r\n            footerSites: [\r\n                {name: 'Copyright ©2020 Woodykaixa. All rights reserved.'}\r\n            ],\r\n            width: docWidth,\r\n            height: document.body.clientHeight,\r\n            isLargeScreen: isLargeScreen(docWidth)\r\n        };\r\n        window.onresize = this.setResponsiveStates;\r\n    }\r\n\r\n    userLogin = () => {\r\n        this.setState({isLoggedInUser: true});\r\n    }\r\n\r\n    userLogout = () => {\r\n        this.setState({isLoggedInUser: false});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <BrowserRouter>\r\n                    <NavBar items={this.state.navSites} loggedIn={this.state.isLoggedInUser}\r\n                            title=\"Kaixa Site\" screenWidth={this.state.width}\r\n                            isLargeScreen={this.state.isLargeScreen}/>\r\n                    <div className=\"MainContent\">\r\n                        <Switch>\r\n                            <Route path=\"/login\">\r\n                                <LoginPage loggedIn={this.state.isLoggedInUser}\r\n                                           loginFunction={this.userLogin}\r\n                                           screenWidth={this.state.width}\r\n                                           isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/logout\">\r\n                                <LogoutPage loggedIn={this.state.isLoggedInUser}\r\n                                            logoutFunction={this.userLogout}/>\r\n                            </Route>\r\n                            <Route path=\"/register\">\r\n                                <RegisterPage/>\r\n                            </Route>\r\n                            <Route path=\"/docs\">\r\n                                <DocPage loggedIn={this.state.isLoggedInUser}\r\n                                         screenWidth={this.state.width}\r\n                                         isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/tools\">\r\n                                <ToolPage screenWidth={this.state.width}\r\n                                          isLargeScreen={this.state.isLargeScreen}/>\r\n                            </Route>\r\n                            <Route path=\"/\">\r\n                                <IndexPage/>\r\n                            </Route>\r\n                        </Switch>\r\n                    </div>\r\n                    <Footer sites={this.state.footerSites} screenWidth={this.state.width}\r\n                            isLargeScreen={this.state.isLargeScreen}/>\r\n\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}